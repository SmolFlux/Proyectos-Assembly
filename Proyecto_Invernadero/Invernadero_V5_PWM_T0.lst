MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[205]: Found directive in column 1. (LIST)
                      00001 LIST      p=16F877A ; Define el microcontrolador
Warning[205]: Found directive in column 1. (INCLUDE)
                      00002 INCLUDE   <p16F877A.inc> ; Incluye la librería del PIC16F877A
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F877A processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2010 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00555         LIST
Warning[205]: Found directive in column 1. (__CONFIG)
2007   3F31           00003 __CONFIG  _XT_OSC & _WDT_OFF & _PWRTE_ON & _BODEN_OFF & _LVP_OFF ; Configuración de fusibles
                      00004      
                      00005         CBLOCK 0x20     
  00000020            00006         Retardoini                      ; retardo inicial
  00000021            00007         TEMPL                           ;Registro bajo de temperatura
  00000022            00008         TEMPH                           ;Registro alto de temperatura
  00000023            00009         HUMH                            ;Registro alto de humedad
  00000024            00010         HUML                            ;Registro bajo de humedad
                      00011         ;MULTH                          ;Resultado de 8 bits de la multiplicacion       - ALTO
                      00012         ;MULTL                          ;Resultado de 8 bits de la multiplicacion       - BAJO
                      00013         ;TEMPF2L                                ;Registro FINAL bajo de temperatura
                      00014         ;TEMPF2H                                ;Registro FINAL alto de temperatura
  00000025            00015         TEMPFL                          ;Registro FINAL bajo de temperatura
  00000026            00016         TEMPFH                          ;Registro FINAL alto de temperatura
  00000027            00017         HUMFH                           ;Registro FINAL alto de humedad
  00000028            00018         HUMFL                           ;Registro FINAL bajo de humedad
  00000029            00019         Auxiliar
  0000002A            00020         RESH                            ;RESUL
  0000002B            00021         RESL                            ;               
  0000002C            00022         CONT
  0000002D            00023         segundos                                ;Se llena a 60, una vez se resta el valor; si Z es 1, se
                             incf minutos
  0000002E            00024         minutos                                 ;se llena a 60, una vez se resta el valor; si Z es 1, se
                             incf horas
  0000002F            00025         horas                                   ;Se llena a 24, una vez se resta el valor, si Z es 1, se
                             reinician todos los contadores
  00000030            00026         TEMP
                      00027     ENDC                                                
                      00028         
                      00029         #DEFINE BOMBITA PORTC,2 
Warning[207]: Found label after column 1. (CargaTMR0)
  0000003D            00030         CargaTMR0       EQU     d'61'                   ;Para conseguir la interrupción del timer 0 cada
                             50 ms.
Warning[207]: Found label after column 1. (TMR0_1s)
  00000014            00031         TMR0_1s         EQU     d'20'                   ;Cantidad de repeticiones para 1s
Warning[207]: Found label after column 1. (TMR0_5s)
  00000064            00032         TMR0_5s         EQU     d'100'                  ;Cantidad de repeticiones para 5s
Warning[207]: Found label after column 1. (COM_MS)
  0000003C            00033         COM_MS          EQU d'60'                       ;Constante para comprobación de minutos y segund
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            os
Warning[207]: Found label after column 1. (COM_H)
  00000001            00034         COM_H           EQU d'1'                        ;Constante para comprobación de horas 
                      00035         #DEFINE ledsito PORTC,0                 ;Led indicador de 1hr
                      00036 
                      00037 ;-----------------------------------;Variables temporales y de uso común
                      00038 ;LCD = PORTD para datos - PORTE para RW, RS y E.
                      00039 ;ADC PORTA - Usaremos AN0 para el LM35.
                      00040 ;ADC PORTA - Usaremos AN1 para el HW-080
                      00041 ;Ocuparemos solamente TEMPL; esto ya que no encontraremos temperaturas mayores a 120 grados celcius.
                      00042         ;Este es un registro de 8 bits el cual deberemos de multiplicar por 100.
                      00043 ;Para el sensor de humedad parece que tambien se multiplica por 100; por lo que sera le mismo procedimie
                            nto.
                      00044 ;PWM - CCP2 - RC1 al 70% 
                      00045                                         
                      00046                                         ;---------OBSERVACIONES---------Usando solo 8 bits----;
                      00047 ;TEMPERATURA
                      00048 ;Nosotros sabemos que nuestra temperatura estará entre 0 y 1023, sin embargo no sabemos la cantidad de b
                            its que representan
                      00049 ;nuestra muestra; por lo que tenemos que calcularla. Si 5V son los 1024 bits; cuanto será el valor que o
                            btenemos del sensor?
                      00050 
                      00051 ;Digamos que obtenemos una lectura 35 grados, el LM35 nos dará 0.35V, simplemente sacamos una regla de 3
                            :
                      00052 ;                               (0.35V)(1024bits)                                                       
                                                 (35'C)(ValorLeido)(bits)
                      00053 ;               Bits = ------------------ = 61.44 bits  :Ahora se calcula la T = -----------------------
                            - = ValorLeido * 0.48
                      00054 ;                                          5V                                                           
                                                                        61.44 bits
                      00055 
                      00056 ;El 0.48 es una constante que se mantiene en cualquier temperatura en la cual se realice el despeje, por
                             lo que la tomamos 
                      00057 ;para nuestros calculos.
                      00058 
                      00059 ;HUMEDAD
                      00060 ;En el HW-080 mientras más cerca este el valor medido a 1023, más seco estará el ambiente
                      00061                                         ;-----------------------------------------------------;
0000                  00062         org 0x00                                
0000   2805           00063         goto INICIO
0004                  00064         org 0x04
0004   2827           00065         goto INT
                      00066 ;-----------------------------------;Limpiamos por si acaso el ADRES al cambiar de canal
0005                  00067 INICIO  
0005   01B0           00068         clrf TEMP
0006   01AD           00069         clrf segundos
0007   01AE           00070         clrf minutos
0008   01AF           00071         clrf horas
0009   2176           00072         call LCD_Inicializa             ;Iniciamos el LCD                                       
000A   20B3           00073         call LIMPIA_REG                 ;Limpieza en cada ciclado
                      00074         ;call LIMPIAR_PWM               ;Configuracion del PWM
                      00075         ;call  REFRESCADO               ;En caso de automatizar el proceso de carga, se usa esta funcion
                      00076         ;clrf CONT                              ;Limpieza inicial del contador de repeticiones
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00077         ;-----------------------;Limpieza de registros temporales y del reloj para un inicio limpio     
000B   1683           00078         bsf STATUS,RP0                  ;seleccione Banco 1
000C   3007           00079         movlw   b'00000111'             ;Prescaler de 256 para el TMR0.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000D   0081           00080         movwf   OPTION_REG              ;Carga configuracion del TMR0
                      00081         ;-----------------------;Configuración TMR0
000E   1107           00082         bcf BOMBITA                             ;Habilitamos CCP2 - RC1 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000F   1405           00083     bsf TRISA,0                         ;Activamos AN0 - Sensor Temperatura 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0010   1485           00084         bsf TRISA,1                             ;Activamos AN1 - Sensor Humedad
0011   3082           00085         movlw   b'10000010'             ;Just.Der, Fosc/8, D=AN7,6,5 AD=AN4,3,2,1,0
                      00086                                                         ;ADFM/ADCS2/0/0/PCFG3/PCFG2/PCFG1/PCFG0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0012   009F           00087         movwf   ADCON1                  ;registro 1 de configuraciòn A/D 
                      00088         
0013   1283           00089     bcf     STATUS,RP0          ;seleccione Banco 0
                      00090 ;-----------------------------------;Se configura ADCON1
0014   30A0           00091         movlw   b'10100000'     
0015   008B           00092         movwf   INTCON                                  
                      00093 ;-----------------------------------;Habilita las iterrupciones globales y por TMR0
0016   3040           00094         movlw   b'01000000'             ;Fosc/8, Canal AN0, GO_Done, 0, AD_ON OFF
                      00095                                                         ;ADCS1/ADCS0/CHS2/CHS1/CHS0/GO_DONE/0/ADON
0017   009F           00096         movwf   ADCON0                  ;registro 0 de configuraciòn A/D
0018   141F           00097         bsf             ADCON0,ADON             ;enciende el ADC
                      00098         
                      00099                                                         ;hacer retardo inicial de Tacq
                      00100                                                         ;retardo de tiempo de adquisicion de al menos 19
                            .72 us
                      00101                                                         ;20us (Tcy=1us, a 4MHz) son 20*Tcy de espera
                      00102 ;-----------------------------------;Se configura el ADCON0
0019   20AE           00103         call RETARDO_CARGA              
                      00104 ;-----------------------------------;Retardo de carga para el circuito interno RC
001A                  00105 TIMR2_CONFIG                    
001A   0192           00106         clrf T2CON                      ;Limpia registro T2CON
001B   3005           00107         movlw b'00000101'       ;Configura T2CON: Postescalar 1:1,Prescaler 1:4, Timer2 ON
001C   0092           00108     movwf T2CON                 ;Carga en T2CON
                      00109 ;-----------------------------------;Subrutina de limpieza para el timer2
001D                  00110 PWM                                             
001D   303D           00111         movlw 0x3D              ;Valor para PR2 segun la frecuencia deseada del PWM
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
001E   0092           00112     movwf PR2                   
001F   30AF           00113         movlw 0xAF          ;Ciclo de trabajo del PWM 70%
0020   0095           00114         movwf CCPR1L            
0021   300C           00115         movlw b'00001100'       ;Configura CCP2CON para modo PWM
0022   0097           00116         movwf CCP1CON
                      00117 ;-----------------------------------;Subrutina de PWM - Siempre estará prendida y el LDR permitirá el pa
                            so a la bombita
                      00118         ;btfss CONT,0                                   
0023   20C8           00119         call  REFRESCADO                                ;Cargamos los ciclos que queramos
0024   303D           00120         movlw CargaTMR0                                 
0025   0081           00121         movwf TMR0                                              ;Cargamos 50ms al TMR0
                      00122         ;movf TMR0_5s,0                                 
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00123         ;movwf CONT                                             ;Contador de ciclos
                      00124 ;-----------------------------------;Se hace la primera carga para la interrupcion
0026                  00125 ESPERA
0026   2826           00126         goto ESPERA
                      00127 ;-----------------------------------;Rutina de espera
0027                  00128 INT
0027   0BAC           00129         decfsz CONT,F                                   ;Para 5s se debe ciclar las veces puestas arriba
0028   282A           00130         goto  FIN_INT                                   ;Si no han terminado los ciclos, termina la int 
0029   20CB           00131         call RELOJ                                              ;Una vez pase 1 s de acuerdo a las repet
                            iciones de 50ms (que se repita 20 veces)
                      00132         ;call CONVERSION                                ;Si queremos dejar de utilizar el reloj solo pon
                            emos como comentario a call reloj 
                      00133                                                                         ;y quitamos como comentario a ca
                            ll CONVERSION
                      00134                                                                         ;De esta manera podemos comproba
                            r que la conversion adc si esta funcionando
002A                  00135 FIN_INT
002A   110B           00136         bcf INTCON,TMR0IF                               ;Regresa de la conversion y termina la int
002B   0009           00137         retfie                                          
                      00138 ;-----------------------------------;Rutina de interrupción     
002C                  00139 CONVERSION
                      00140 ;-----------------------------------;Punto de ciclaje
002C   1283           00141         bcf STATUS,RP0
002D   119F           00142         bcf ADCON0,3
                      00143 ;-----------------------------------;Cambio de canal al AN0 al momento de ciclar
002E   20C3           00144         call LIMPIEZA_ADC
                      00145 ;-----------------------------------;Limpiamos por si acaso el ADRES al cambiar de canal
002F                  00146 GUARDAR_TEMP
002F   20AE           00147         call RETARDO_CARGA
0030   2094           00148         call CONVERSION_ADC                             ;Iniciamos la conversion ADC en el canal AN0
0031   081E           00149         movf ADRESH, 0
0032   00A2           00150         movwf TEMPH
                      00151 ;-----------------------------------;Guardamos la parte alta de la muestra - Temperatura
0033   1683           00152         bsf STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0034   081E           00153         movf ADRESL, 0
0035   1283           00154         bcf STATUS, RP0
0036   00A1           00155         movwf TEMPL     
0037   2063           00156         call CALCULO_TEMP                               ;Calculamos el valor de la temperatura
                      00157 ;-----------------------------------;Termina de leer el LM35 y ahora lee el HW-080
0038   1283           00158         bcf STATUS,RP0
0039   159F           00159         bsf ADCON0,3
                      00160 ;-----------------------------------;Cambio de canal de AN0 a AN1
003A   20C3           00161         call LIMPIEZA_ADC
                      00162 ;-----------------------------------;Limpiamos por si acaso el ADRES al cambiar de canal
003B                  00163 GUARDAR_HUM     
003B   20AE           00164         call RETARDO_CARGA
003C   2094           00165         call CONVERSION_ADC                             ;Iniciamos la conversion ADC en el canal AN1
003D   081E           00166         movf ADRESH, 0
003E   00A3           00167         movwf HUMH
                      00168 ;-----------------------------------;Guardamos la parte alta de la muestra - Humedad
003F   1683           00169         bsf STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0040   081E           00170         movf ADRESL, 0
0041   1283           00171         bcf STATUS, RP0
0042   00A4           00172         movwf HUML
0043   2072           00173         call CALCULO_HUM
                      00174 ;goto VISUALIZAR_DATOS
                      00175 ;-----------------------------------;Guardamos la parte baja de la muestra - Humedad
0044                  00176 VISUALIZAR_DATOS
0044   21BA           00177         call LCD_Borra
0045   3099           00178         movlw M0
0046   214E           00179         call LCD_Mensaje
0047   21E1           00180         call LCD_UnEspacioBlanco                        ;Temperatura: 
0048   0825           00181         movf TEMPFL,W                                           ;Ahora se visualiza en decimal.
0049   213B           00182         call BIN_a_BCD                                          ;Primero se convierte a BCD.
004A   00A9           00183         movwf Auxiliar                                          ;Guarda las decenas y unidades.
004B   2083           00184         call AJUSTE                                                     ;Ajuste de 1 visualizado en la s
                            imulacion
004C   0848           00185         movf BCD_Centenas,W                                     ;Visualiza centenas.
004D   21F7           00186         call LCD_Nibble                                         
004E   0829           00187         movf Auxiliar,W                                         ;Visualiza las decenas y unidades.
004F   21F3           00188         call LCD_ByteCompleto                           
0050   21E1           00189         Call LCD_UnEspacioBlanco
0051   30AA           00190         movlw M2
0052   214E           00191         call LCD_Mensaje
                      00192 
0053   21AA           00193         call LCD_Linea2
0054   30A0           00194         movlw M1
0055   214E           00195         call LCD_Mensaje
0056   21E1           00196         call LCD_UnEspacioBlanco                        ;Humedad: 
0057   0828           00197         movf HUMFL,W                                            ;Ahora se visualiza en decimal. - prueba
                      00198         ;movf RESL,W                                                    ;Ahora se visualiza en decimal. 
                            - prueba
0058   213B           00199         call BIN_a_BCD                                          ;Primero se convierte a BCD.
0059   00A9           00200         movwf Auxiliar                                          ;Guarda las decenas y unidades.
005A   2083           00201         call AJUSTE                                                     ;Ajuste de 1 visualizado en la s
                            imulacion
005B   0848           00202         movf BCD_Centenas,W                                     ;Visualiza centenas.
005C   21F7           00203         call LCD_Nibble                                         
005D   0829           00204         movf Auxiliar,W                                         ;Visualiza las decenas y unidades.
005E   21F3           00205         call LCD_ByteCompleto
005F   21E1           00206         Call LCD_UnEspacioBlanco
0060   30AC           00207         movlw M3
0061   214E           00208         call LCD_Mensaje
                      00209 
                      00210 ;       call Retardo_2s                                         ;Retardo antes de refresco - este se pon
                            e para permitir al pic un "respiro"                             
                      00211 ;goto CONVERSION                                                
Warning[203]: Found opcode in column 1. (return)
0062   0008           00212 return  
                      00213 ;-----------------------------------;Ciclamos la conversion ADC
0063                  00214 CALCULO_TEMP
0063   0821           00215         movf TEMPL,0                                            ;Usamos el nibble bajo de la muestra, po
                            demos ignorar los 2 bits mas significativos
0064   00B1           00216         movwf Arit_Multiplicando
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0065   3030           00217         movlw d'48'                                                     ;Constante obtenida de la regla 
                            de 3 en bits 
0066   00B2           00218         movwf Arit_Multiplicador
0067   2105           00219         call Arit_Multiplica_8Bit
0068   0838           00220         movf Arit_Producto_H,0                          
0069   00BA           00221         movwf Arit_Dividendo_H
006A   0837           00222         movf Arit_Producto_L,0
006B   00BB           00223         movwf Arit_Dividendo_L
                      00224                                                                                 ;No es posible multiplic
                            ar por 0.48, por lo que primero se multiplica por 48 y despues se divide por 100
006C   3064           00225         movlw d'100'                                            ;Dividimos entre 100 ya que no es posibl
                            e multiplicar por 0.48
006D   00BF           00226         movwf Arit_Divisor      
006E   2129           00227         call Arit_Divide_16Bit                          ;Una vez dividido sería como solo multiplicar TE
                            MPL por 0.48
006F   083D           00228         movf Arit_Cociente_L,0                          ;Usamos solo la parte baja del resultado, este a
                            barca de 0 a 255
0070   00A5           00229         movwf TEMPFL                                            
Warning[203]: Found opcode in column 1. (return)
0071   0008           00230 return
                      00231 ;-----------------------------------;Subrutina para calculo de temperatura
0072                  00232 CALCULO_HUM
0072   0824           00233         movf HUML,0
0073   00B1           00234         movwf Arit_Multiplicando
0074   3030           00235         movlw d'48'
0075   00B2           00236         movwf Arit_Multiplicador
0076   2105           00237         call Arit_Multiplica_8Bit
0077   0838           00238         movf Arit_Producto_H,0
0078   00BA           00239         movwf Arit_Dividendo_H
0079   0837           00240         movf Arit_Producto_L,0
007A   00BB           00241         movwf Arit_Dividendo_L
                      00242         
007B   3064           00243         movlw d'100'
007C   00BF           00244         movwf Arit_Divisor
007D   2129           00245         call Arit_Divide_16Bit
007E   083D           00246         movf Arit_Cociente_L,0                  
007F   00A8           00247         movwf HUMFL
0080   083C           00248         movf Arit_Cociente_H,0                  
0081   00A7           00249         movwf HUMFH
                      00250         ;call AJUSTE_HUM                                        ;Recordemos que mientras mayor sea la mu
                            estra, entonces mas seco estará
                      00251                                                                         ;Debemos arreglar la logica
Warning[203]: Found opcode in column 1. (return)
0082   0008           00252 return
                      00253 ;-----------------------------------;Subrutina para calculo de humedad
0083                  00254 AJUSTE
0083   3001           00255         movlw d'1'
Message[305]: Using default destination of 1 (file).
0084   07A9           00256         addwf Auxiliar
Warning[203]: Found opcode in column 1. (return)
0085   0008           00257 return 
                      00258 ;-----------------------------------;Subrutina de ajuste general
0086                  00259 AJUSTE_HUM                                                      ;1023 - Muestra = Ajuste en porcentaje r
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            eal
0086   3004           00260         movlw 0x04
0087   00C2           00261         movwf Arit_Operando_2H
0088   3000           00262         movlw 0x00
0089   00C3           00263         movwf Arit_Operando_2L
                      00264                                                                         ;Guardamos primero el 1024
008A   0827           00265         movf  HUMFH,0
008B   00C0           00266         movwf Arit_Operando_1H
008C   0828           00267         movf  HUMFL,0
008D   00C1           00268         movwf Arit_Operando_1L                  ;Guardamos nuestra muestra de temperatura en OPERANDO 1
008E   20FD           00269         call Arit_Resta_16Bit                   ;OPERANDO2 - OPERANDO1 
008F                  00270 RESULTADO                                                       ;De acuerdo a la libreria, el resultado 
                            se guarda en OPERANDO 2
008F   0842           00271         movf Arit_Operando_2H,0
0090   00AA           00272         movwf RESH
0091   0843           00273         movf Arit_Operando_2L,0
0092   00AB           00274         movwf RESL
Warning[203]: Found opcode in column 1. (return)
0093   0008           00275 return
                      00276 ;-----------------------------------;Subrutina de logica - humedad
0094                  00277 CONVERSION_ADC
0094   151F           00278         bsf             ADCON0,GO_DONE                  ;Comienza la conversion
0095   191F           00279         btfsc   ADCON0,GO_DONE                  ;GO_DONE = 0 - Termina conversion y salta
0096   2895           00280         GOTO            $-1                                     ;Siempre y cuando no acabe, regresamos
Warning[203]: Found opcode in column 1. (return)
0097   0008           00281 return
                      00282 ;------------------------------------;Subrutina para inicio de conversion ADC
0098                  00283 Mensajes 
0098   0782           00284                 addwf PCL,F
Warning[207]: Found label after column 1. (M0)
0099                  00285         M0
0099   3454 3465 346D 00286                 DT "Temp: ", 0x00
       3470 343A 3420 
       3400 
Warning[207]: Found label after column 1. (M1)
00A0                  00287         M1
00A0   3448 3475 346D 00288                 DT "Humedad: ", 0x00
       3465 3464 3461 
       3464 343A 3420 
       3400 
Warning[207]: Found label after column 1. (M2)
00AA                  00289         M2
00AA   3443 3400      00290                 DT "C",0x00
Warning[207]: Found label after column 1. (M3)
00AC                  00291         M3
00AC   3425 3400      00292                 DT "%",0x00
                      00293 ;-----------------------------------;Mensajes
00AE                  00294 RETARDO_CARGA
00AE   3014           00295         movlw   d'20'                                   ;carga valor 20 decimal
00AF   00A0           00296         movwf   Retardoini                              ;en retardo inicial
00B0                  00297 Retardo
00B0   0BA0           00298         decfsz  Retardoini,f                    ;decremente retardo inicial
00B1   28B0           00299     goto    Retardo                             ;si no termina ciclo, va a Retardo
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[203]: Found opcode in column 1. (return)
00B2   0008           00300 return                                                          ;una vez termina, se cumplen los 20us y 
                            regresamos
                      00301 ;-----------------------------------;Retardo Inicial para el ADC = 20us
00B3                  00302 LIMPIA_REG
00B3   01A1           00303         clrf TEMPL                                              ;Registro bajo de temperatura
00B4   01A2           00304         clrf TEMPH                                              ;Registro alto de temperatura
00B5   01A3           00305         clrf HUMH                                               ;Registro alto de humedad
00B6   01A4           00306         clrf HUML                                               ;Registro bajo de humedad
                      00307         ;clrf MULTH                                             ;Resultado de 8 bits de la multiplicacio
                            n       - ALTO
                      00308         ;clrf MULTL                                             ;Resultado de 8 bits de la multiplicacio
                            n       - BAJO
00B7   01A5           00309         clrf TEMPFL                                             ;Registro FINAL bajo de temperatura
00B8   01A6           00310         clrf TEMPFH                                             ;Registro FINAL alto de temperatura
00B9   01A7           00311         clrf HUMFH                                              ;Registro FINAL alto de humedad
00BA   01A8           00312         clrf HUMFL                                              ;Registro FINAL bajo de humedad
00BB   01AC           00313         clrf CONT
Warning[203]: Found opcode in column 1. (return)
00BC   0008           00314 return 
                      00315 ;-----------------------------------;Subrutina de limpieza de variables 
00BD                  00316 LIMPIAR_PWM
00BD   0195           00317         clrf  CCPR1L
00BE   0197           00318         clrf  CCP1CON
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00BF   0192           00319         clrf  PR2
00C0   0103           00320         clrw
00C1   1107           00321         bcf BOMBITA
Warning[203]: Found opcode in column 1. (return)
00C2   0008           00322 return
                      00323 ;-----------------------------------;Subrutina de limpieza para PWM
00C3                  00324 LIMPIEZA_ADC
00C3   019E           00325         clrf ADRESH
00C4   1683           00326         bsf STATUS,RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00C5   019E           00327         clrf ADRESL
00C6   1283           00328         bcf STATUS,RP0
Warning[203]: Found opcode in column 1. (return)
00C7   0008           00329 return
                      00330 ;-----------------------------------;Subrutina de limpieza ADRES
00C8                  00331 REFRESCADO
                      00332         ;movf TMR0_5s,0                                 ;50 ms en cada repetecion
00C8   3014           00333         movlw d'20'                                             ;una vez 50ms se repiten 20 veces, pasó 
                            1 segundo
00C9   00AC           00334         movwf CONT
Warning[203]: Found opcode in column 1. (return)
00CA   0008           00335 return
                      00336 ;-----------------------------------;Subrutina de carga para el CONT para el ciclado
00CB                  00337 RELOJ   
Warning[207]: Found label after column 1. (S_S)
00CB                  00338         S_S     
Message[305]: Using default destination of 1 (file).
00CB   0AAD           00339                 incf segundos                                   ;Primero incrementamos los segundos
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CC   082D           00340                 movf segundos,0                                 ;Movemos la cantidad de segundos al regi
                            stro de trabajo
00CD   00B0           00341                 movwf TEMP
00CE   083C           00342                 movf COM_MS,0
Message[305]: Using default destination of 1 (file).
00CF   02B0           00343                 subwf TEMP                                              ;SUBWF : F - W , seria segundos 
                            - 60
00D0   1903           00344                 btfsc STATUS,Z                                  ;si al restarle 60 Z = 1, entonces se in
                            crementa minutos
00D1   20D3           00345                 call retorno_seg                                ;Pasaron 60 seg, limpiamos e inc minutos
00D2   28EF           00346                 goto FIN_RELOJ
                      00347         ;return
                      00348         
Warning[207]: Found label after column 1. (retorno_seg)
00D3                  00349         retorno_seg                                                     ;Si ya pasaron 60 segundos, se i
                            ncrementa minutos y se limpia el reg de segundos
Message[305]: Using default destination of 1 (file).
00D3   0AAE           00350                 incf minutos
00D4   01AD           00351                 clrf segundos
00D5   0008           00352         return
                      00353         ;-----------------------------------;Subrutina de segundos
Warning[207]: Found label after column 1. (S_M)
00D6                  00354         S_M
00D6   082E           00355                 movf minutos,0                                  ;Movemos la cantidad de minutos al regis
                            tro de trabajo
00D7   00B0           00356                 movwf TEMP                                              
00D8   083C           00357                 movf COM_MS,0
Message[305]: Using default destination of 1 (file).
00D9   02B0           00358                 subwf TEMP                                              ;SUBWF : F - W , seria segundos 
                            - 60
00DA   1903           00359                 btfsc STATUS,Z                                  ;si al restarle 60 Z = 1, entonces se in
                            crementa minutos
00DB   20DD           00360                 call retorno_min                                ;Pasaron 60 seg, limpiamos e inc minutos
00DC   28EF           00361                 goto FIN_RELOJ
                      00362         ;return
                      00363         
Warning[207]: Found label after column 1. (retorno_min)
00DD                  00364         retorno_min                                                     ;Si ya pasaron 60 segundos, se i
                            ncrementa minutos y se limpia el reg de segundos
Message[305]: Using default destination of 1 (file).
00DD   0AAF           00365                 incf horas
00DE   01AE           00366                 clrf minutos
00DF   0008           00367         return
                      00368         ;-----------------------------------;Subrutina de minutos
Warning[207]: Found label after column 1. (S_H)
00E0                  00369         S_H
00E0   082F           00370                 movf horas,0                                    ;Movemos la cantidad de minutos al regis
                            tro de trabajo
00E1   00B0           00371                 movwf TEMP                                              ;Ponemos los minutos en un regis
                            tro temporal
Message[305]: Using default destination of 1 (file).
00E2   0881           00372                 movf COM_H                                              ;pasamos la cantidad de horas qu
                            e queremos que cuente al registro de trabajo
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[305]: Using default destination of 1 (file).
00E3   02B0           00373                 subwf TEMP                                              ;horas contadas - x ; donde x so
                            n las horas que queremos 
00E4   1903           00374                 btfsc STATUS,Z                                  ;si Z = 1, entonces ya pasaron 24 horas
00E5   20E7           00375                 call limpieza_reloj                             ;reseteamos el reloj
00E6   28EF           00376                 goto FIN_RELOJ
                      00377         ;return
                      00378 
Warning[207]: Found label after column 1. (limpieza_reloj)
00E7                  00379         limpieza_reloj                                          ;Si ya pasaron 1 hora, se limpia el relo
                            j y vuelve a contar desde 00:00:00
00E7   01AD           00380                 clrf segundos                                   ;Limpiamos segundos
00E8   01AE           00381                 clrf minutos                                    ;Limpiamos minutos
00E9   01AF           00382                 clrf horas                                              ;Limpiamos horas
00EA   202C           00383                 call  CONVERSION                                ;Cuando Z = 1, entonces pasó una hora y 
                            se hace la conversion ADC
00EB   1407           00384                 bsf ledsito                                             ;Una vez pasa 1 hora, se prende 
                            un led indicador
00EC   2238           00385                 call Retardo_2s
00ED   1007           00386                 bcf ledsito                                             ;Se prende por 2s, y al apagarse
                             se vuelve a comenzar a contar
00EE   0008           00387         return
                      00388         ;-----------------------------------;Subrutina de horas y limpieza de la hora
00EF                  00389 FIN_RELOJ
Warning[203]: Found opcode in column 1. (return)
00EF   0008           00390 return
                      00391 ;-----------------------------------;Subrutina de comprobacion de reloj
00F0                  00392 DESBORDAMIENTO  
00F0   1C8C           00393         btfss PIR1,TMR2IF   ;Esperar desbordamiento     
00F1   28F0           00394         goto DESBORDAMIENTO
00F2   108C           00395         bcf PIR1,TMR2IF         ;Limpia el flag de desbordamiento del TMR1
00F3   0191           00396         clrf TMR2
00F4   2805           00397         GOTO INICIO
                      00398 ;-----------------------------------;Subrutina de desbordamiento
                      00399         INCLUDE <ARIT.INC>
                      00001 ;
                      00002 ; Librerú} de subrutinas con diversas operaciones aritméticas:
                      00003 ;
                      00004 ; - Arit_VisualizaBinario: Visualiza en el LCD el dato en binario que le entra por W.
                      00005 ; - Arit_Negar: Niega el contenido de un número binario de 16 bits.
                      00006 ; - Arit_Suma_16Bit: Realiza la suma con dos registros de 16 bits.
                      00007 ; - Arit_Resta_16Bit: Realiza la resta con dos registros de 16 bits.
                      00008 ; - Arit_Multiplica_8Bit: Multiplica dos registros de 8 bits.
                      00009 ; - Arit_Multiplica_16Bit: Multiplica dos registros de 16 bits.
                      00010 ; - Arit_Divide_8Bit: Divide dos registros de 8 bits.
                      00011 ; - Arit_Divide_16Bit: Divide un registro de 16 bits entre otro de 7 bits.
                      00012 ; - Arit_BCD_Bin_16Bit: Convierte un número BCD de 5 dúitos a binario natural de 16 bits.
                      00013 ; - Arit_Bin_BCD_16Bit: Convierte un número binario de 16 bits a BCD de 5 dúitos.
                      00014 ; - Arit_VisualizaBCD: Visualiza en el LCD un número decimal de varios dúitos.
                      00015 
                      00016         CBLOCK
  00000031            00017         Arit_Multiplicando
  00000032            00018         Arit_Multiplicador
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000033            00019         Arit_Multiplicando_H                            ; Byte bajo del operando 1.
  00000034            00020         Arit_Multiplicador_H                            ; Byte bajo del operando 2.
  00000035            00021         Arit_Multiplicando_L                            ; Byte bajo del operando 1.
  00000036            00022         Arit_Multiplicador_L
  00000037            00023         Arit_Producto_L                         ; Byte bajo del byte 1 del resultado.
  00000038            00024         Arit_Producto_H                         ; Byte alto del byte 1 del resultado.
  00000039            00025         Arit_ContadorBits                               ; Para realizar diferentes contadores con bits.
  0000003A            00026         Arit_Dividendo_H
  0000003B            00027         Arit_Dividendo_L
  0000003C            00028         Arit_Cociente_H
  0000003D            00029         Arit_Cociente_L
  0000003E            00030         Arit_Resto
  0000003F            00031         Arit_Divisor
                      00032 ;       Arit_Auxiliar                                   ; Registro temporal para realizar operaciones in
                            termedias.
  00000040            00033         Arit_Operando_1H
  00000041            00034         Arit_Operando_1L
  00000042            00035         Arit_Operando_2H                        ;para resta de 16 bits. Aqui guarda el resultado.
  00000043            00036         Arit_Operando_2L
  00000044            00037         Arit_Producto_1H                
  00000045            00038         Arit_Producto_1L                
  00000046            00039         Arit_Producto_2H                
  00000047            00040         Arit_Producto_2L
                      00041 
                      00042         ENDC
                      00043 
                      00044 ; Subrutina "Arit_Negar" ----------------------------------------------------------------
                      00045 ;
                      00046 ; Niega el contenido de un número de 16 bits almacenado en dos registros
                      00047 ; (Arit_Operando_1H, Arit_Operando_1L).
                      00048 ;
                      00049 ; Lo hace en complemento a 2 por el método clásico, es decir, primero invierte todos los bits
                      00050 ; y después le suma "1".
                      00051 ;
                      00052 ; Se utiliza la instrucción "addwf __", en lugar de "incf ___", porque ésta no posiciona
                      00053 ; el flag de Carry.
                      00054 ;
                      00055 ; En el registro de trabajo W también aparece el resultado de la negación del byte bajo.
                      00056 ;
                      00057 ; Entrada:      En los registros (Arit_Operando_1H, Arit_Operando_1L) el dato de 
                      00058 ;                       16 bits a negar.
                      00059 ; Salida:       En los mismo registros (Arit_Operando_1H, Arit_Operando_1L) el dato de 
                      00060 ;                       16 bits negado. En (W) el byte más bajo negado.
                      00061 
00F5                  00062 Arit_Negar
00F5   09C0           00063         comf    Arit_Operando_1H,F              ; Invierte los registros que contienen los operandos.
00F6   09C1           00064         comf    Arit_Operando_1L,F
00F7   3001           00065         movlw   .1                                              ; Le suma 1.
00F8   07C1           00066         addwf   Arit_Operando_1L,F              
00F9   1803           00067         btfsc   STATUS,C                                ; Si hay acarreo tiene que llevarlo al byte supe
                            rior.
00FA   0AC0           00068         incf    Arit_Operando_1H,F      
00FB   0841           00069         movf    Arit_Operando_1L,W              ; En (W) el resultado del byte bajo.
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00FC   0008           00070         return
                      00071 
                      00072 
                      00073 ; Subrutinas "Arit_Suma_16Bit" y "Arit_Resta_16Bit" ---------------------------------------
                      00074 ;
                      00075 ; Realiza la suma/resta en 16 bits (Operando 2) +/- (Operando 1) y el resultado lo guarda en
                      00076 ; (Operando 2). El resultado lo guarda en 16 bits. Es decir:
                      00077 ; (Arit_Operando_2H, Arit_Operando_2L) +/- (Arit_Operando_1H, Arit_Operando_1L) --> 
                      00078 ; (Arit_Operando_2H, Arit_Operando_2L).
                      00079 ;
00FD                  00080 Arit_Resta_16Bit
00FD   20F5           00081         call    Arit_Negar                              ; Para la resta, simplemente niega el numero de 
                            16 bits
00FE                  00082 Arit_Suma_16Bit                                         ; (Arit_Operando_1H, Arit_Operando_1L) y suma.
00FE   0841           00083         movf    Arit_Operando_1L,W              ; Suma el byte más bajo.
00FF   07C3           00084         addwf   Arit_Operando_2L,F              ; y lo guarda en Arit_Operando_2L.
0100   1803           00085         btfsc   STATUS,C                                ; Si hay acarreo incrementa en una unidad uno de
0101   0AC0           00086         incf    Arit_Operando_1H,F              ; de los bytes altos.
0102   0840           00087         movf    Arit_Operando_1H,W
0103   07C2           00088         addwf   Arit_Operando_2H,F              ; Suma el byte alto.
0104   0008           00089         return
                      00090 
                      00091 
                      00092 ; Subrutinas "Arit_Multiplica_8Bit" ------------------------------------------------------
                      00093 ;
                      00094 ; Realiza la multiplicación del contenido de dos registros de 8 bits. El resultado se almacena
                      00095 ; en 16 bits. La operación se realiza sin signo.
                      00096 ;
                      00097 ; El algoritmo utilizado se basa en el método empleado para efectuar una multiplicación
                      00098 ; manualmente con lápiz y papel. En este método, la multiplicación se lleva a cabo tomando
                      00099 ; un bit del multiplicador, empezando por el menos significativo: 
                      00100 ; - Si es "1" se efectúa la suma del multiplicando y el producto parcial anterior. El producto
                      00101 ;   parcial resultante se desplaza un bit a la derecha, introduciendo un cero por la izquierda.
                      00102 ; - Si es "0" la suma no es necesaria y el producto parcial resultante anterior se desplaza un
                      00103 ;   bit a la derecha, introduciendo además un cero por la izquierda.
                      00104 ;
                      00105 ; Este proceso se repite tantas veces como bits tiene el multiplicador.
                      00106 ;
                      00107 ; Previo a la llamada de esta subrutinas los números a multiplicar se almacenan en los registros
                      00108 ; Arit_Multiplicando y Arit_Multiplicador. El resultado se almacena en 16 bits en los registros 
                      00109 ; (Arit_Producto_H, Arit_Producto_L). Es decir:
                      00110 ; (Arit_Multiplicando) * (Arit_Multiplicador) --> (Arit_Producto_H, Arit_Producto_L)
                      00111 ;
                      00112 ; Se utilizan posiciones de memoria definidas anteriormente, a las que se les cambia el nombre 
                      00113 ; por motivos puramente pedagógicos:
                      00114 
                      00115 
                      00116 
0105                  00117 Arit_Multiplica_8Bit
0105   01B8           00118         clrf    Arit_Producto_H                 ; En principio el resultado es cero.
0106   01B7           00119         clrf    Arit_Producto_L
0107   3008           00120         movlw   .8                                              ; Carga el contador de 8 bits.
0108   00B9           00121         movwf   Arit_ContadorBits
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0109   0831           00122         movf    Arit_Multiplicando,W    ; Carga el multiplicando.
010A                  00123 Arit_MultiplicaBit8
010A   0CB2           00124         rrf             Arit_Multiplicador,F    ; Va a comprobar el siguiente bit del multiplicador.
010B   1803           00125         btfsc   STATUS,C                                ; Si el bit del multiplicador es "1"
010C   07B8           00126         addwf   Arit_Producto_H,F               ; suma el resultado parcial anterior más el multiplicand
                            o.
010D   0CB8           00127         rrf             Arit_Producto_H,F               ; Desplaza el resultado parcial un lugar hacia l
                            a 
010E   0CB7           00128         rrf             Arit_Producto_L,F               ; derecha, introduciendo un "0" por la izquierda
                            .
010F   0BB9           00129         decfsz  Arit_ContadorBits,F             ; ¿Ha multiplicado los 8 bits?
0110   290A           00130         goto    Arit_MultiplicaBit8             ; Repite la operación.
0111   0008           00131         return
                      00132         
                      00133 
                      00134 ; Subrutinas "Arit_Multiplica_16Bit" ------------------------------------------------------
                      00135 ;
                      00136 ; Realiza la multiplicación del contenido de dos registros de 16 bits. El resultado se almacena
                      00137 ; en 32 bits. La operación se realizan sin signo.
                      00138 ;
                      00139 ; El algoritmo utilizado es similar al de la multiplicación de 8 bits.
                      00140 ;
                      00141 ; Previo a la llamada de esta subrutinas los números a multiplicar se almacenan en los registros
                      00142 ; (Arit_Multiplicando_H, Arit_Multiplicando_L) y (Arit_Multiplicador_H, Arit_Multiplicador_L).
                      00143 ; El resultado en 32 bits se proporciona en los registros 
                      00144 ; (Arit_Producto_2H, Arit_Producto_2L, Arit_Producto_1H, Arit_Producto_1L).
                      00145 ;
                      00146 ; Se utilizan posiciones de memoria definidas anteriormente, a las que se les cambia el nombre 
                      00147 ; por motivos puramente pedagógicos:
                      00148 
                      00149 ;Arit_Multiplicando_H   EQU     Arit_Operando_1H
                      00150 ;Arit_Multiplicando_L   EQU     Arit_Operando_1L
                      00151 ;Arit_Multiplicador_H   EQU     Arit_Operando_2H
                      00152 ;Arit_Multiplicador_L   EQU     Arit_Operando_2L
                      00153 ;Arit_Producto_1H               EQU     Arit_Resultado_1H
                      00154 ;Arit_Producto_1L               EQU     Arit_Resultado_1L
                      00155 ;Arit_Producto_2H               EQU     Arit_Resultado_2H
                      00156 ;Arit_Producto_2L               EQU     Arit_Resultado_2L
                      00157 
0112                  00158 Arit_Multiplica_16Bit
0112   01C4           00159         clrf    Arit_Producto_1H                ; En principio el resultado es cero.
0113   01C5           00160         clrf    Arit_Producto_1L
0114   01C6           00161         clrf    Arit_Producto_2H
0115   01C7           00162         clrf    Arit_Producto_2L
0116   3010           00163         movlw   .16                                             ; Carga el contador de 16 bits.
0117   00B9           00164         movwf   Arit_ContadorBits
0118                  00165 Arit_Multiplica16Bit
0118   0CB4           00166         rrf             Arit_Multiplicador_H,F  ; Va a comprobar el siguiente bit del multiplicador.
0119   0CB6           00167         rrf             Arit_Multiplicador_L,F
011A   1C03           00168         btfss   STATUS,C
011B   2922           00169         goto    Arit_Multiplicador_BitCero
011C   0835           00170         movf    Arit_Multiplicando_L,W  ; Suma en 16 bits el resultado parcial y
011D   07C7           00171         addwf   Arit_Producto_2L,F              ; y el multiplicando.
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

011E   1803           00172         btfsc   STATUS,C
011F   0AC6           00173         incf    Arit_Producto_2H,F
0120   0833           00174         movf    Arit_Multiplicando_H,W
0121   07C6           00175         addwf   Arit_Producto_2H,F
0122                  00176 Arit_Multiplicador_BitCero
0122   0CC6           00177         rrf             Arit_Producto_2H,F              ; Desplaza el resultado parcial un lugar hacia l
                            a 
0123   0CC7           00178         rrf             Arit_Producto_2L,F              ; derecha, introduciendo un "0" por la izquierda
                            .
0124   0CC4           00179         rrf             Arit_Producto_1H,F
0125   0CC5           00180         rrf             Arit_Producto_1L,F
0126   0BB9           00181         decfsz  Arit_ContadorBits,F             ; ¿Ha multiplicado los 16 bits?
0127   2918           00182         goto    Arit_Multiplica16Bit    ; Repite la operación.
0128   0008           00183         return
                      00184 
                      00185 
                      00186 
                      00187 ; Subrutinas "Arit_Divide_16Bit" --------------------------------------------------------
                      00188 ;
                      00189 ; Realiza la división del contenido del dividendo de 16 bits entre un divisor de 7 bits.
                      00190 ; El máximo valor del divisor serE127.
                      00191 ;
                      00192 ; Se utiliza el mismo algoritmo explicado para la subrutina Arit_Divide_8bit.
                      00193 ;
                      00194 ; Entradas:
                      00195 ;       - (Arit_Dividendo_H) y (Arit_Dividendo_L) que hacen de dividendo de 16 bits.
                      00196 ;       - (Arit_Divisor) que es el divisor de 7 bits, (máximo b'01111111'=0x7F=d'127').
                      00197 ; Salidas:
                      00198 ;       - (Arit_Cociente_H) y (Arit_Cociente_L) que hacen de cociente de 16 bits.
                      00199 ;       - (Resto) de 8 bits.
                      00200 ;       - (W), en el registro de trabajo también el resto.
                      00201 ;
                      00202 ; La división se harEsin signo y el programa que le llame deberEdetectar que el divisor no
                      00203 ; es cero. El divisor serEde 7 bits, es decir su valor máximo serE
                      00204 ; b'01111111'=0x7F=d'127'.
                      00205 ;
                      00206 ; Se utilizan posiciones de memoria definidas anteriormente, a las que se les cambia el nombre 
                      00207 ; por motivos puramente pedagógicos:
                      00208 ;
                      00209 
                      00210 
0129                  00211 Arit_Divide_16Bit
0129   01BC           00212         clrf    Arit_Cociente_H                 ; En principio el resultado es cero.
012A   01BD           00213         clrf    Arit_Cociente_L
012B   01BE           00214         clrf    Arit_Resto
012C   3010           00215         movlw   .16                                             ; Carga el contador.
012D   00B9           00216         movwf   Arit_ContadorBits
012E                  00217 Arit_DivideBit16
012E   0DBB           00218         rlf             Arit_Dividendo_L,F
012F   0DBA           00219         rlf             Arit_Dividendo_H,F
0130   0DBE           00220         rlf             Arit_Resto,F                    ; (Arit_Resto) contiene el dividendo parcial.
0131   083F           00221         movf    Arit_Divisor,W
0132   023E           00222         subwf   Arit_Resto,W                    ; Compara dividendo parcial y divisor.
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0133   1803           00223         btfsc   STATUS,C                                ; Si (dividendo parcial)>(divisor)
0134   00BE           00224         movwf   Arit_Resto                              ; (dividendo parcial) - (divisor) --> (dividendo
                             parcial)
0135   0DBD           00225         rlf             Arit_Cociente_L,F               ; Desplaza el cociente introduciendo el bit apro
                            piado
0136   0DBC           00226         rlf             Arit_Cociente_H,F               ; "0" E"1" según corresponda.
0137   0BB9           00227         decfsz  Arit_ContadorBits,F
0138   292E           00228         goto    Arit_DivideBit16
0139   083E           00229         movf    Arit_Resto,W                    ; El resto también en (W).
013A   0008           00230         return
                      00231         
                      00400         INCLUDE <BIN_BCD.INC>                   ;Para mandar constantes al LCD, debemos convertir a BCD
                      00001 ;******************************** Librería "BIN_BCD.INC" ********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.            www.pic16f84a.com
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Un número binario natural de 8 bits es convertido a BCD. El resultado se guarda en tres
                      00010 ; posiciones de memorias llamadas: BCD_Centenas, BCD_Decenas y BCD_Unidades.
                      00011 ;
                      00012 ; El procedimiento utilizado es mediante restas de 10, tal como se explicó en el capítulo 9.
                      00013 ;
                      00014 ; Entrada:      En el registro W el número binario natural a convertir.
                      00015 ; Salidas:      En (BCD_Centenas), (BCD_Decenas) y (BCD_Unidades).
                      00016 ;                       En el registro W también las decenas (nibble alto) y unidades (nibble bajo).
                      00017 
                      00018 ; Subrutina "BIN_a_BCD" -----------------------------------------------------------------
                      00019 
                      00020         CBLOCK                                          ; En las subrutinas no se debe fijar la direcció
                            n
  00000048            00021         BCD_Centenas                            ; de la RAM de usuario. Se toma a continuación de
  00000049            00022         BCD_Decenas                                     ; la última asignada.
  0000004A            00023         BCD_Unidades    
                      00024         ENDC
                      00025 ;
013B                  00026 BIN_a_BCD
013B   01C8           00027         clrf    BCD_Centenas            ; Carga los registros con el resultado inicial.
013C   01C9           00028         clrf    BCD_Decenas                     ; En principio las centenas y decenas a cero.
013D   00CA           00029         movwf   BCD_Unidades            ; Se carga el número binario a convertir.
013E                  00030 BCD_Resta10
013E   300A           00031         movlw   .10                                     ; A las unidades se les va restando 10 en cada
013F   024A           00032         subwf   BCD_Unidades,W          ; pasada. (W)=(BCD_Unidades) -10.
0140   1C03           00033         btfss   STATUS,C                        ; ¿C = 1?, ¿(W) positivo?, ¿(BCD_Unidades)>=10?
0141   294B           00034         goto    BIN_BCD_Fin                     ; No, es menor de 10. Se acabó.
0142                  00035 BCD_IncrementaDecenas
0142   00CA           00036         movwf   BCD_Unidades            ; Recupera lo que queda por restar.
0143   0AC9           00037         incf    BCD_Decenas,F           ; Incrementa las decenas y comprueba si ha llegado
0144   300A           00038         movlw   .10                                     ; a 10. Lo hace mediante una resta.
0145   0249           00039         subwf   BCD_Decenas,W           ; (W)=(BCD_Decenas)-10).
0146   1C03           00040         btfss   STATUS,C                        ; ¿C = 1?, ¿(W) positivo?, ¿(BCD_Decenas)>=10?
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0147   293E           00041         goto    BCD_Resta10                     ; No. Vuelve a dar otra pasada, restándole 10 a
0148                  00042 BCD_IncrementaCentenas                  ; las unidades.
0148   01C9           00043         clrf    BCD_Decenas                     ; Pone a cero las decenas 
0149   0AC8           00044         incf    BCD_Centenas,F          ; e incrementa las centenas.
014A   293E           00045         goto    BCD_Resta10                     ; Otra pasada: Resta 10 al número a convertir.
014B                  00046 BIN_BCD_Fin
014B   0E49           00047         swapf   BCD_Decenas,W           ; En el nibble alto de (W) también las decenas.
014C   074A           00048         addwf   BCD_Unidades,W          ; En el nibble bajo de (W) las unidades.
014D   0008           00049         return                                          ; Vuelve al programa principal.
                      00050         
                      00051 ; La directiva "END" se debe poner en el programa principal no aquí.
                      00052 
                      00053 ;       ===================================================================
                      00054 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
                      00055 ;         E. Palacios, F. Remiro y L. López.            www.pic16f84a.com
                      00056 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00057 ;       ===================================================================
                      00401         INCLUDE <LCD_MENS.INC>                  
                      00001 ;**************************** Librería "LCD_MENS.INC" ********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.            www.pic16f84a.com
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Librería de subrutinas para el manejo de mensajes a visualizar en un visualizador LCD.
                      00010 
                      00011         CBLOCK
  0000004B            00012         LCD_ApuntaCaracter                              ; Indica la posición del carácter a visualizar
                      00013                                                                         ; respecto del comienzo de todos
                             los mensajes,
                      00014                                                                         ; (posición de la etiqueta "Mens
                            ajes").
  0000004C            00015         LCD_ValorCaracter                               ; Código ASCII del carácter a 
                      00016         ENDC                                                    ; visualizar.
                      00017 
                      00018 ; Los mensajes tienen que estar situados dentro de las 256 primeras posiciones de la 
                      00019 ; memoria de programa, es decir, no pueden superar la dirección 0FFh.
                      00020 
                      00021 ; Subrutina "LCD_Mensaje" ---------------------------------------------------------------
                      00022 ;
                      00023 ; Visualiza por pantalla el mensaje apuntado por el registro W.
                      00024 ;
                      00025 ; Los mensajes deben localizarse dentro de una zona encabezada por la etiqueta "Mensajes" y que
                      00026 ; tenga la siguiente estructura:
                      00027 ;
                      00028 ; Mensajes                                                      ; ¡Etiqueta obligatoria!
                      00029 ;       addwf   PCL,F
                      00030 ; Mensaje0                                                      ; Posición inicial del mensaje.
                      00031 ;       DT ".. ..", 0x00                                ; Mensaje terminado en 0x00.
                      00032 ; Mensaje1
                      00033 ;       ...     
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00034 ;       ...
                      00035 ; FinMensajes
                      00036 ;
                      00037 ; La llamada a esta subrutina se realizará siguiendo este ejemplo:
                      00038 ;
                      00039 ;       movlw   Mensaje0                                ; Carga la posición del mensaje.
                      00040 ;       call    LCD_Mensaje                             ; Visualiza el mensaje.
                      00041 ;
014E                  00042 LCD_Mensaje
014E   00CB           00043         movwf   LCD_ApuntaCaracter              ; Posición del primer carácter del mensaje.
014F   3098           00044         movlw   Mensajes                                ; Halla la posición relativa del primer carácter
0150   02CB           00045         subwf   LCD_ApuntaCaracter,F    ; del mensaje respecto de etiqueta "Mensajes".
0151   03CB           00046         decf    LCD_ApuntaCaracter,F    ; Compensa la posición que ocupa "addwf PCL,F".
0152                  00047 LCD_VisualizaOtroCaracter
0152   084B           00048         movf    LCD_ApuntaCaracter,W
0153   2098           00049         call    Mensajes                                ; Obtiene el código ASCII del carácter apuntado.
0154   00CC           00050         movwf   LCD_ValorCaracter               ; Guarda el valor de carácter.
0155   08CC           00051         movf    LCD_ValorCaracter,F             ; Lo único que hace es posicionar flag Z. En caso
0156   1903           00052         btfsc   STATUS,Z                                ; que sea "0x00", que es código indicador final 
0157   295B           00053         goto    LCD_FinMensaje                  ; de mensaje, sale fuera.
0158                  00054 LCD_NoUltimoCaracter
0158   21BF           00055         call    LCD_Caracter                    ; Visualiza el carácter ASCII leído.
0159   0ACB           00056         incf    LCD_ApuntaCaracter,F    ; Apunta a la posición del siguiente carácter 
015A   2952           00057         goto    LCD_VisualizaOtroCaracter       ; dentro del mensaje.
015B                  00058 LCD_FinMensaje
015B   0008           00059         return                                                  ; Vuelve al programa principal.
                      00060 
                      00061 ; Subrutina "LCD_MensajeMovimiento" -----------------------------------------------------
                      00062 ;
                      00063 ; Visualiza un mensaje de mayor longitud que los 16 caracteres que pueden representarse
                      00064 ; en una línea, por tanto se desplaza a través de la pantalla.
                      00065 ;
                      00066 ; En el mensaje debe dejarse 16 espacios en blanco, al principio y al final para
                      00067 ; conseguir que el desplazamiento del mensaje sea lo más legible posible.
                      00068 ;
                      00069         CBLOCK  
  0000004D            00070         LCD_CursorPosicion                              ; Contabiliza la posición del cursor dentro de l
                            a
                      00071         ENDC                                                    ; pantalla LCD
                      00072 
015C                  00073 LCD_MensajeMovimiento
015C   00CB           00074         movwf   LCD_ApuntaCaracter              ; Posición del primer carácter del mensaje.
015D   3098           00075         movlw   Mensajes                                ; Halla la posición relativa del primer carácter
015E   02CB           00076         subwf   LCD_ApuntaCaracter,F    ; del mensaje respecto de la etiqueta "Mensajes".
015F   03CB           00077         decf    LCD_ApuntaCaracter,F    ; Compensa la posición que ocupa "addwf PCL,F".
0160                  00078 LCD_PrimeraPosicion
0160   01CD           00079         clrf    LCD_CursorPosicion              ; El cursor en la posición 0 de la línea.
0161   21BA           00080         call    LCD_Borra                               ; Se sitúa en la primera posición de la línea 1 
                            y
0162                  00081 LCD_VisualizaCaracter                           ; borra la pantalla.
0162   3010           00082         movlw   LCD_CaracteresPorLinea  ; ¿Ha llegado a final de línea?
0163   024D           00083         subwf   LCD_CursorPosicion,W
0164   1D03           00084         btfss   STATUS,Z
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0165   296B           00085         goto    LCD_NoEsFinalLinea
0166                  00086 LCD_EsFinalLinea
0166   221A           00087         call    Retardo_200ms                   ; Lo mantiene visualizado durante este tiempo.
0167   221A           00088         call    Retardo_200ms
0168   300F           00089         movlw   LCD_CaracteresPorLinea-1; Apunta a la posición del segundo carácter visualizado
0169   02CB           00090         subwf   LCD_ApuntaCaracter,F    ; en pantalla, que será el primero en la siguiente
016A   2960           00091         goto    LCD_PrimeraPosicion             ; visualización de línea, para producir el efecto
016B                  00092 LCD_NoEsFinalLinea                                      ; de desplazamiento hacia la izquierda.
016B   084B           00093         movf    LCD_ApuntaCaracter,W
016C   2098           00094         call    Mensajes                                ; Obtiene el ASCII del carácter apuntado.
016D   00CC           00095         movwf   LCD_ValorCaracter               ; Guarda el valor de carácter.
016E   08CC           00096         movf    LCD_ValorCaracter,F             ; Lo único que hace es posicionar flag Z. En caso
016F   1903           00097         btfsc   STATUS,Z                                ; que sea "0x00", que es código indicador final 
0170   2975           00098         goto    LCD_FinMovimiento               ; de mensaje, sale fuera.
0171                  00099 LCD_NoUltimoCaracter2
0171   21BF           00100         call    LCD_Caracter                    ; Visualiza el carácter ASCII leído.
0172   0ACD           00101         incf    LCD_CursorPosicion,F    ; Contabiliza el incremento de posición del 
                      00102                                                                         ; cursor en la pantalla.
0173   0ACB           00103         incf    LCD_ApuntaCaracter,F    ; Apunta a la siguiente posición por visualizar.
0174   2962           00104         goto    LCD_VisualizaCaracter   ; Vuelve a visualizar el siguiente carácter
0175                  00105 LCD_FinMovimiento                                       ; de la línea.
0175   0008           00106         return                                                  ; Vuelve al programa principal.
                      00107         
                      00108 ;       ===================================================================
                      00109 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
                      00110 ;         E. Palacios, F. Remiro y L. López.            www.pic16f84a.com
                      00111 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00112 ;       ===================================================================     
                      00113         
                      00402         INCLUDE <LCD_4BIT_16F877_D_E.INC>
                      00001 ; Estas subrutinas permiten realizar las tareas básicas de control de un módulo LCD de 2
                      00002 ; líneas por 16 caracteres, compatible con el modelo LM016L.
                      00003 ;
                      00004 ; El visualizador LCD está conectado al Puerto B del PIC mediante un bus de 4 bits. Las
                      00005 ; conexiones son:
                      00006 ;    -  Las 4 líneas superiores del módulo LCD, pines <DB7:DB4>  se conectan a las 4
                      00007 ;       líneas superiores del Puerto B del PIC, pines <RB7:RB4>.
                      00008 ;    -  Pin RS del LCD a la línea RA0 del PIC.
                      00009 ;    -  Pin R/W del LCD a la línea RA1 del PIC, o a masa.
                      00010 ;    -  Pin Enable del LCD a la línea RA2 del PIC.
                      00011 ;
                      00012 ; Se utilizan llamadas a subrutinas de retardo de tiempo localizadas en la librería RETARDOS.INC.
                      00013 ;
                      00014 ; ZONA DE DATOS *********************************************************************
                      00015 
                      00016         CBLOCK
  0000004E            00017         LCD_Dato
  0000004F            00018         LCD_GuardaDato
  00000050            00019         LCD_GuardaTRISD
  00000051            00020         LCD_Auxiliar1
  00000052            00021         LCD_Auxiliar2
                      00022         ENDC
                      00023 
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000010            00024 LCD_CaracteresPorLinea  EQU     .16     ; Número de caracteres por línea de la pantalla.
                      00025 
                      00026 #DEFINE  LCD_PinRS      PORTE,0
                      00027 #DEFINE  LCD_PinRW      PORTE,1
                      00028 #DEFINE  LCD_PinEnable  PORTE,2
                      00029 #DEFINE  LCD_BusDatos   PORTD
                      00030 
                      00031 ; Subrutina "LCD_Inicializa" ------------------------------------------------------------
                      00032 ;
                      00033 ; Inicialización del módulo LCD: Configura funciones del LCD, produce reset por software,
                      00034 ; borra memoria y enciende pantalla. El fabricante especifica que para garantizar la
                      00035 ; configuración inicial hay que hacerla como sigue:
                      00036 ;
0176                  00037 LCD_Inicializa
0176   1683           00038         bsf     STATUS,RP0              ; Configura las líneas conectadas al pines RS,
0177   1009           00039         bcf     LCD_PinRS               ; R/W y E.
0178   1109           00040         bcf     LCD_PinEnable
0179   1089           00041         bcf     LCD_PinRW
017A   3005           00042         movlw .5                        ; Configura todos los pines del puerto E como digitales
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
017B   009F           00043         movwf ADCON1
017C   1283           00044         bcf     STATUS,RP0
017D   1089           00045         bcf     LCD_PinRW               ; En caso de que esté conectado le indica
                      00046                                         ; que se va a escribir en el LCD.
017E   1109           00047         bcf     LCD_PinEnable           ; Impide funcionamiento del LCD poniendo E=0.
017F   1009           00048         bcf     LCD_PinRS               ; Activa el Modo Comando poniendo RS=0.
0180   2220           00049         call    Retardo_20ms
0181   3030           00050         movlw   b'00110000'     
0182   2190           00051         call    LCD_EscribeLCD          ; Escribe el dato en el LCD.
0183   2224           00052         call    Retardo_5ms     
0184   3030           00053         movlw   b'00110000'     
0185   2190           00054         call    LCD_EscribeLCD
0186   220D           00055         call    Retardo_200micros
0187   3030           00056         movlw   b'00110000'     
0188   2190           00057         call    LCD_EscribeLCD
0189   3020           00058         movlw   b'00100000'             ; Interface de 4 bits.
018A   2190           00059         call    LCD_EscribeLCD
                      00060 
                      00061 ; Ahora configura el resto de los parámetros: 
                      00062 
018B   21BC           00063         call    LCD_2Lineas4Bits5x7     ; LCD de 2 líneas y caracteres de 5x7 puntos.
018C   21BA           00064         call    LCD_Borra               ; Pantalla encendida y limpia. Cursor al principio
018D   21B8           00065         call    LCD_CursorOFF           ; de la línea 1. Cursor apagado.
018E   21A6           00066         call    LCD_CursorIncr          ; Cursor en modo incrementar.
018F   0008           00067         return
                      00068 
                      00069 ; Subrutina "LCD_EscribeLCD" -----------------------------------------------------------
                      00070 ;
                      00071 ; Envía el dato del registro de trabajo W al bus de dato y produce un pequeño pulso en el pin
                      00072 ; Enable del LCD. Para no alterar el contenido de las líneas de la parte baja del Puerto B que
                      00073 ; no son utilizadas para el LCD (pines RB3:RB0), primero se lee estas líneas y después se
                      00074 ; vuelve a enviar este dato sin cambiarlo.
                      00075 
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0190                  00076 LCD_EscribeLCD
0190   39F0           00077         andlw   b'11110000'             ; Se queda con el nibble alto del dato que es el
0191   00CE           00078         movwf   LCD_Dato                ; que hay que enviar y lo guarda.
0192   0808           00079         movf    LCD_BusDatos,W          ; Lee la información actual de la parte baja
0193   390F           00080         andlw   b'00001111'             ; del Puerto B, que no se debe alterar.
0194   04CE           00081         iorwf   LCD_Dato,F              ; Enviará la parte alta del dato de entrada
                      00082                                         ; y en la parte baja lo que había antes.
0195   1683           00083         bsf     STATUS,RP0              ; Acceso al Banco 1.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0196   0808           00084         movf    TRISD,W                 ; Guarda la configuración que tenía antes TRISD.
0197   00D0           00085         movwf   LCD_GuardaTRISD
0198   300F           00086         movlw   b'00001111'             ; Las 4 líneas inferiores del Puerto B se dejan 
0199   0588           00087         andwf   PORTD,F                 ; como estaban y las 4 superiores como salida.
019A   1283           00088         bcf     STATUS,RP0              ; Acceso al Banco 0.
019B   1509           00089         BSF     PORTE, 0x02
019C   084E           00090         movf    LCD_Dato,W              ; Recupera el dato a enviar.
019D   0088           00091         movwf   LCD_BusDatos            ; Envía el dato al módulo LCD.
019E   0000           00092         NOP                             ; Permite funcionamiento del LCD mediante un pequeño
019F   1109           00093         bcf     LCD_PinEnable           ; pulso y termina impidiendo el funcionamiento del LCD.
01A0   1683           00094         bsf     STATUS,RP0              ; Acceso al Banco 1. Restaura el antiguo valor en
01A1   0850           00095         movf    LCD_GuardaTRISD,W       ; la configuración del Puerto B.
01A2   0088           00096         movwf   PORTD                   ; Realmente es TRISD.
01A3   1283           00097         bcf     STATUS,RP0              ; Acceso al Banco 0.
01A4   2226           00098         CALL    Retardo_2ms
01A5   0008           00099         return
                      00100 
                      00101 ; Subrutinas variadas para el control del módulo LCD -----------------------------------------
                      00102 ;
                      00103 ;Los comandos que pueden ser ejecutados son:
                      00104 ;
01A6                  00105 LCD_CursorIncr                          ; Cursor en modo incrementar.
01A6   3006           00106         movlw   b'00000110'
01A7   29BD           00107         goto    LCD_EnviaComando
01A8                  00108 LCD_Linea1                              ; Cursor al principio de la Línea 1.
01A8   3080           00109         movlw   b'10000000'             ; Dirección 00h de la DDRAM
01A9   29BD           00110         goto    LCD_EnviaComando
01AA                  00111 LCD_Linea2                              ; Cursor al principio de la Línea 2.
01AA   30C0           00112         movlw   b'11000000'             ; Dirección 40h de la DDRAM
01AB   29BD           00113         goto    LCD_EnviaComando
01AC   3094           00114         MOVLW   0x94
01AD   29BD           00115         GOTO    LCD_EnviaComando
01AE   30D4           00116         MOVLW   0xD4
01AF   29BD           00117         GOTO    LCD_EnviaComando
01B0                  00118 LCD_PosicionLinea1                      ; Cursor a posición de la Línea 1, a partir de la
01B0   3880           00119         iorlw   b'10000000'             ; dirección 00h de la DDRAM más el valor del
01B1   29BD           00120         goto    LCD_EnviaComando        ; registro W.
01B2                  00121 LCD_PosicionLinea2                      ; Cursor a posición de la Línea 2, a partir de la
01B2   38C0           00122         iorlw   b'11000000'             ; dirección 40h de la DDRAM más el valor del
01B3   29BD           00123         goto    LCD_EnviaComando        ; registro W.
01B4                  00124 LCD_OFF                         ; Pantalla apagada.
01B4   3008           00125         movlw   b'00001000'
01B5   29BD           00126         goto    LCD_EnviaComando
01B6                  00127 LCD_CursorON                            ; Pantalla encendida y cursor encendido.
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B6   300E           00128         movlw   b'00001110'
01B7   29BD           00129         goto    LCD_EnviaComando
01B8                  00130 LCD_CursorOFF                           ; Pantalla encendida y cursor apagado.
01B8   300C           00131         movlw   b'00001100'
01B9   29BD           00132         goto    LCD_EnviaComando
01BA                  00133 LCD_Borra                               ; Borra toda la pantalla, memoria DDRAM y pone el 
01BA   3001           00134         movlw   b'00000001'             ; cursor a principio de la línea 1.
01BB   29BD           00135         goto    LCD_EnviaComando
01BC                  00136 LCD_2Lineas4Bits5x7                     ; Define la pantalla de 2 líneas, con caracteres
01BC   3028           00137         movlw   b'00101000'             ; de 5x7 puntos y conexión al PIC mediante bus de
                      00138 ;                                       ; 4 bits. 
                      00139 
                      00140 ; Subrutinas "LCD_EnviaComando" y "LCD_Caracter" ------------------------------------
                      00141 ;
                      00142 ; "LCD_EnviaComando". Escribe un comando en el registro del módulo LCD. La palabra de
                      00143 ; comando ha sido entregada a través del registro W.  Trabaja en Modo Comando.
                      00144 ; "LCD_Caracter". Escribe en la memoria DDRAM del LCD el carácter ASCII introducido a
                      00145 ; a través del registro W. Trabaja en Modo Dato.
                      00146 ;
01BD                  00147 LCD_EnviaComando
01BD   1009           00148         bcf     LCD_PinRS               ; Activa el Modo Comando, poniendo RS=0.
01BE   29C1           00149         goto    LCD_Envia
01BF                  00150 LCD_Caracter
01BF   1409           00151         bsf     LCD_PinRS               ; Activa el "Modo Dato", poniendo RS=1.
01C0   21C9           00152         call    LCD_CodigoCGROM ; Obtiene el código para correcta visualización.
01C1                  00153 LCD_Envia
01C1   00CF           00154         movwf   LCD_GuardaDato          ; Guarda el dato a enviar.
01C2   2190           00155         call    LCD_EscribeLCD          ; Primero envía el nibble alto.
01C3   0E4F           00156         swapf   LCD_GuardaDato,W        ; Ahora envía el nibble bajo. Para ello pasa el
                      00157                                         ; nibble bajo del dato a enviar a parte alta del byte.
01C4   2190           00158         call    LCD_EscribeLCD          ; Se envía al visualizador LCD.
01C5   1C09           00159         btfss   LCD_PinRS               ; Debe garantizar una correcta escritura manteniendo 
01C6   2226           00160         call    Retardo_2ms             ; 2 ms en modo comando y 50 µs en modo cáracter.
01C7   2212           00161         call    Retardo_50micros
01C8   0008           00162         return  
                      00163 
                      00164 ; Subrutina "LCD_CodigoCGROM" -----------------------------------------------------------
                      00165 ;
                      00166 ; A partir del carácter ASCII número 127 los códigos de los caracteres definidos en la
                      00167 ; tabla CGROM del LM016L no coinciden con los códigos ASCII. Así por ejemplo, el código
                      00168 ; ASCII de la "Ñ" en la tabla CGRAM del LM016L es EEh.
                      00169 ;
                      00170 ; Esta subrutina convierte los códigos ASCII de la "Ñ", "º" y otros, a códigos CGROM para que
                      00171 ; que puedan ser visualizado en el módulo LM016L.
                      00172 ; 
                      00173 ; Entrada:      En (W) el código ASCII del carácter que se desea visualizar.
                      00174 ; Salida:       En (W) el código definido en la tabla CGROM.
                      00175 
01C9                  00176 LCD_CodigoCGROM
01C9   00CE           00177         movwf   LCD_Dato                ; Guarda el valor del carácter y comprueba si es
01CA                  00178 LCD_EnheMinuscula                       ; un carácter especial.
01CA   3CF1           00179         sublw   'ñ'                     ; ¿Es la "ñ"?
01CB   1D03           00180         btfss   STATUS,Z
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01CC   29D0           00181         goto    LCD_EnheMayuscula       ; No es "ñ".
01CD   30EE           00182         movlw   b'11101110'             ; Código CGROM de la "ñ".
01CE   00CE           00183         movwf   LCD_Dato
01CF   29DD           00184         goto    LCD_FinCGROM
01D0                  00185 LCD_EnheMayuscula
01D0   084E           00186         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
01D1   3CD1           00187         sublw   'Ñ'                     ; ¿Es la "Ñ"?
01D2   1D03           00188         btfss   STATUS,Z
01D3   29D7           00189         goto    LCD_Grado               ; No es "Ñ".
01D4   30EE           00190         movlw   b'11101110'             ; Código CGROM de la "ñ". (No hay símbolo para
01D5   00CE           00191         movwf   LCD_Dato                ; la "Ñ" mayúscula en la CGROM).
01D6   29DD           00192         goto    LCD_FinCGROM    
01D7                  00193 LCD_Grado
01D7   084E           00194         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
01D8   3CBA           00195         sublw   'º'                     ; ¿Es el símbolo "º"?
01D9   1D03           00196         btfss   STATUS,Z
01DA   29DD           00197         goto    LCD_FinCGROM            ; No es "º".
01DB   30DF           00198         movlw   b'11011111'             ; Código CGROM del símbolo "º".
01DC   00CE           00199         movwf   LCD_Dato
01DD                  00200 LCD_FinCGROM
01DD   084E           00201         movf    LCD_Dato,W              ; En (W) el código buscado.
01DE   0008           00202         return
                      00203 
                      00204 ; Subrutina "LCD_DosEspaciosBlancos" y "LCD_LineaBlanco" --------------------------------
                      00205 ;
                      00206 ; Visualiza espacios en blanco.
                      00207 
01DF                  00208 LCD_LineaEnBlanco
01DF   3010           00209         movlw   LCD_CaracteresPorLinea
01E0   29E6           00210         goto    LCD_EnviaBlancos
01E1                  00211 LCD_UnEspacioBlanco
01E1   3001           00212         movlw   .1
01E2   29E6           00213         goto    LCD_EnviaBlancos
01E3                  00214 LCD_DosEspaciosBlancos
01E3   3002           00215         movlw   .2
01E4   29E6           00216         goto    LCD_EnviaBlancos
01E5                  00217 LCD_TresEspaciosBlancos
01E5   3003           00218         movlw   .3
01E6                  00219 LCD_EnviaBlancos
01E6   00D1           00220         movwf   LCD_Auxiliar1           ; (LCD_Auxiliar1) se utiliza como contador.
01E7                  00221 LCD_EnviaOtroBlanco     
01E7   3020           00222         movlw   ' '                     ; Esto es un espacio en blanco.
01E8   21BF           00223         call    LCD_Caracter            ; Visualiza tanto espacios en blanco como se
01E9   0BD1           00224         decfsz  LCD_Auxiliar1,F         ; haya cargado en (LCD_Auxiliar1).
01EA   29E7           00225         goto    LCD_EnviaOtroBlanco
01EB   0008           00226         return
                      00227 
                      00228 ; Subrutinas "LCD_ByteCompleto" y "LCD_Byte" --------------------------------------------
                      00229 ;
                      00230 ; Subrutina "LCD_ByteCompleto", visualiza el byte que almacena el registro W en el
                      00231 ; lugar actual de la pantalla. Por ejemplo, si (W)=b'10101110' visualiza "AE".
                      00232 ;
                      00233 ; Subrutina "LCD_Byte" igual que la anterior, pero en caso de que el nibble alto sea cero 
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00234 ; visualiza en su lugar un espacio en blanco. Por ejemplo si (W)=b'10101110' visualiza "AE"
                      00235 ; y si (W)=b'00001110', visualiza " E" (un espacio blanco delante).
                      00236 ;
                      00237 ; Utilizan la subrutina "LCD_Nibble" que se analiza más adelante.
                      00238 ;
01EC                  00239 LCD_Byte
01EC   00D2           00240         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
01ED   39F0           00241         andlw   b'11110000'             ; Analiza si el nibble alto es cero.
01EE   1D03           00242         btfss   STATUS,Z                ; Si es cero lo apaga.
01EF   29F4           00243         goto    LCD_VisualizaAlto               ; No es cero y lo visualiza.
01F0   3020           00244         movlw   0x20                    ; Visualiza un espacio en blanco.
01F1   21BF           00245         call    LCD_Caracter
01F2   29F6           00246         goto    LCD_VisualizaBajo
                      00247 
01F3                  00248 LCD_ByteCompleto
01F3   00D2           00249         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
01F4                  00250 LCD_VisualizaAlto
01F4   0E52           00251         swapf   LCD_Auxiliar2,W         ; Pone el nibble alto en la parte baja.
01F5   21F7           00252         call    LCD_Nibble              ; Lo visualiza.
01F6                  00253 LCD_VisualizaBajo
01F6   0852           00254         movf    LCD_Auxiliar2,W         ; Repite el proceso con el nibble bajo.
                      00255 ;       call    LCD_Nibble              ; Lo visualiza.
                      00256 ;       return
                      00257 
                      00258 ; Subrutina "LCD_Nibble" ----------------------------------------------------------------
                      00259 ;
                      00260 ; Visualiza en el lugar actual de la pantalla, el valor hexadecimal que almacena en el nibble
                      00261 ; bajo del registro W. El nibble alto de W no es tenido en cuenta. Ejemplos:
                      00262 ; - Si (W)=b'01010110', se visualizará "6". 
                      00263 ; - Si (W)=b'10101110', se visualizará "E". 
                      00264 ;
01F7                  00265 LCD_Nibble
01F7   390F           00266         andlw   b'00001111'             ; Se queda con la parte baja.
01F8   00D1           00267         movwf   LCD_Auxiliar1           ; Lo guarda.
01F9   3C09           00268         sublw   0x09                    ; Comprueba si hay que representarlo con letra.
01FA   1C03           00269         btfss   STATUS,C        
01FB   29FF           00270         goto    LCD_EnviaByteLetra
01FC   0851           00271         movf    LCD_Auxiliar1,W
01FD   3E30           00272         addlw   0X30    ; ' '           ; El número se pasa a carácter ASCII sumándole
01FE   2A01           00273         goto    LCD_FinVisualizaDigito  ; el ASCII del cero y lo visualiza.
01FF                  00274 LCD_EnviaByteLetra
01FF   0851           00275         movf    LCD_Auxiliar1,W
0200   3E37           00276         addlw   0x37    ;'a'            ; Sí, por tanto, se le suma el ASCII de la 'A'.
0201                  00277 LCD_FinVisualizaDigito
0201   29BF           00278         goto    LCD_Caracter            ; Y visualiza el carácter. Se hace con un "goto"
                      00279                                         ; para no sobrecargar la pila.
                      00280                                         
                      00281 ;       ===================================================================
                      00282 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
                      00283 ;         E. Palacios, F. Remiro y L. López.
                      00284 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00285 ;       ===================================================================
                      00403         INCLUDE <RETARDOS.INC> 
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;**************************** LibrerÃ­a "RETARDOS.INC" *********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. LÃ³pez.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; LibrerÃ­a con mÃºltiples subrutinas de retardos, desde 4 microsegundos hasta 20 segundos. 
                      00010 ; AdemÃ¡s se pueden implementar otras subrutinas muy fÃ¡cilmente.
                      00011 ;
                      00012 ; Se han calculado para un sistema microcontrolador con un PIC trabajando con un cristal
                      00013 ; de cuarzo a 4 MHz. Como cada ciclo mÃ¡quina son 4 ciclos de reloj, resulta que cada
                      00014 ; ciclo mÃ¡quina tarda 4 x 1/4MHz = 1 Âµs.
                      00015 ;
                      00016 ; En los comentarios, "cm" significa "ciclos mÃ¡quina".
                      00017 ;
                      00018 ; ZONA DE DATOS *********************************************************************
                      00019 
                      00020         CBLOCK
  00000053            00021         R_ContA                         ; Contadores para los retardos.
  00000054            00022         R_ContB
  00000055            00023         R_ContC
                      00024         ENDC
                      00025 ;
                      00026 ; RETARDOS de 4 hasta 10 microsegundos ---------------------------------------------------
                      00027 ;
                      00028 ; A continuaciÃ³n retardos pequeÃ±os teniendo en cuenta que para una frecuencia de 4 MHZ,
                      00029 ; la llamada a subrutina "call" tarda 2 ciclos mÃ¡quina, el retorno de subrutina
                      00030 ; "return" toma otros 2 ciclos mÃ¡quina y cada instrucciÃ³n "nop" tarda 1 ciclo mÃ¡quina.
                      00031 ;
0202                  00032 Retardo_10micros                                ; La llamada "call" aporta 2 ciclos mÃ¡quina.
0202   0000           00033         nop                             ; Aporta 1 ciclo mÃ¡quina.
0203   0000           00034         nop                             ; Aporta 1 ciclo mÃ¡quina.
0204   0000           00035         nop                             ; Aporta 1 ciclo mÃ¡quina.
0205   0000           00036         nop                             ; Aporta 1 ciclo mÃ¡quina.
0206   0000           00037         nop                             ; Aporta 1 ciclo mÃ¡quina.
0207   0000           00038         nop                             ; Aporta 1 ciclo mÃ¡quina.      
0208                  00039 Retardo_5micros                         ; La llamada "call" aporta 2 ciclos mÃ¡quina.
0208   0000           00040         nop                             ; Aporta 1 ciclo mÃ¡quina.
0209                  00041 Retardo_4micros                         ; La llamada "call" aporta 2 ciclos mÃ¡quina.
0209   0008           00042         return                          ; El salto del retorno aporta 2 ciclos mÃ¡quina.
                      00043 ;
                      00044 ; RETARDOS de 20 hasta 500 microsegundos ------------------------------------------------
                      00045 ;
020A                  00046 Retardo_500micros                               ; La llamada "call" aporta 2 ciclos mÃ¡quina.
020A   0000           00047         nop                             ; Aporta 1 ciclo mÃ¡quina.
020B   30A4           00048         movlw   d'164'                  ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "K".
020C   2A16           00049         goto    RetardoMicros           ; Aporta 2 ciclos mÃ¡quina.
020D                  00050 Retardo_200micros                               ; La llamada "call" aporta 2 ciclos mÃ¡quina.
020D   0000           00051         nop                             ; Aporta 1 ciclo mÃ¡quina.
020E   3040           00052         movlw   d'64'                   ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "K".
020F   2A16           00053         goto    RetardoMicros           ; Aporta 2 ciclos mÃ¡quina.
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0210                  00054 Retardo_100micros                               ; La llamada "call" aporta 2 ciclos mÃ¡quina.
0210   301F           00055         movlw   d'31'                   ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "K".
0211   2A16           00056         goto    RetardoMicros           ; Aporta 2 ciclos mÃ¡quina.
0212                  00057 Retardo_50micros                                ; La llamada "call" aporta 2 ciclos mÃ¡quina.
0212   0000           00058         nop                             ; Aporta 1 ciclo mÃ¡quina.
0213   300E           00059         movlw   d'14'                   ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "K".
0214   2A16           00060         goto    RetardoMicros           ; Aporta 2 ciclos mÃ¡quina.
0215                  00061 Retardo_20micros                                ; La llamada "call" aporta 2 ciclos mÃ¡quina.
0215   3005           00062         movlw   d'5'                    ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "K".
                      00063 ;
                      00064 ; El prÃ³ximo bloque "RetardoMicros" tarda:
                      00065 ; 1 + (K-1) + 2 + (K-1)x2 + 2 = (2 + 3K) ciclos mÃ¡quina.
                      00066 ;
0216                  00067 RetardoMicros
0216   00D3           00068         movwf   R_ContA                 ; Aporta 1 ciclo mÃ¡quina.
0217                  00069 Rmicros_Bucle
0217   0BD3           00070         decfsz  R_ContA,F               ; (K-1)x1 cm (cuando no salta) + 2 cm (al saltar).
0218   2A17           00071         goto    Rmicros_Bucle           ; Aporta (K-1)x2 ciclos mÃ¡quina.
0219   0008           00072         return                          ; El salto del retorno aporta 2 ciclos mÃ¡quina.
                      00073 ;
                      00074 ;En total estas subrutinas tardan:
                      00075 ; - Retardo_500micros:  2 + 1 + 1 + 2 + (2 + 3K) = 500 cm = 500 Âµs. (para K=164 y 4 MHz).
                      00076 ; - Retardo_200micros:  2 + 1 + 1 + 2 + (2 + 3K) = 200 cm = 200 Âµs. (para K= 64 y 4 MHz).
                      00077 ; - Retardo_100micros:  2     + 1 + 2 + (2 + 3K) = 100 cm = 100 Âµs. (para K= 31 y 4 MHz).
                      00078 ; - Retardo_50micros :  2 + 1 + 1 + 2 + (2 + 3K) =  50 cm =  50 Âµs. (para K= 14 y 4 MHz).
                      00079 ; - Retardo_20micros :  2     + 1     + (2 + 3K) =  20 cm =  20 Âµs. (para K=  5 y 4 MHz).
                      00080 ;
                      00081 ; RETARDOS de 1 ms hasta 200 ms. --------------------------------------------------------
                      00082 ;
021A                  00083 Retardo_200ms                           ; La llamada "call" aporta 2 ciclos mÃ¡quina.
021A   30C8           00084         movlw   d'200'                  ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "M".
021B   2A29           00085         goto    Retardos_ms             ; Aporta 2 ciclos mÃ¡quina.
021C                  00086 Retardo_100ms                           ; La llamada "call" aporta 2 ciclos mÃ¡quina.
021C   3064           00087         movlw   d'100'                  ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "M".
021D   2A29           00088         goto    Retardos_ms             ; Aporta 2 ciclos mÃ¡quina.
021E                  00089 Retardo_50ms                            ; La llamada "call" aporta 2 ciclos mÃ¡quina.
021E   3032           00090         movlw   d'50'                   ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "M".
021F   2A29           00091         goto    Retardos_ms             ; Aporta 2 ciclos mÃ¡quina.
0220                  00092 Retardo_20ms                            ; La llamada "call" aporta 2 ciclos mÃ¡quina.
0220   3014           00093         movlw   d'20'                   ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "M".
0221   2A29           00094         goto    Retardos_ms             ; Aporta 2 ciclos mÃ¡quina.
0222                  00095 Retardo_10ms                            ; La llamada "call" aporta 2 ciclos mÃ¡quina.
0222   300A           00096         movlw   d'10'                   ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "M".
0223   2A29           00097         goto    Retardos_ms             ; Aporta 2 ciclos mÃ¡quina.
0224                  00098 Retardo_5ms                             ; La llamada "call" aporta 2 ciclos mÃ¡quina.
0224   3005           00099         movlw   d'5'                    ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "M".
0225   2A29           00100         goto    Retardos_ms             ; Aporta 2 ciclos mÃ¡quina.
0226                  00101 Retardo_2ms                             ; La llamada "call" aporta 2 ciclos mÃ¡quina.
0226   3002           00102         movlw   d'2'                    ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "M".
0227   2A29           00103         goto    Retardos_ms             ; Aporta 2 ciclos mÃ¡quina.
0228                  00104 Retardo_1ms                             ; La llamada "call" aporta 2 ciclos mÃ¡quina.
0228   3001           00105         movlw   d'1'                    ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "M".
                      00106 ;
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00107 ; El prÃ³ximo bloque "Retardos_ms" tarda:
                      00108 ; 1 + M + M + KxM + (K-1)xM + Mx2 + (K-1)Mx2 + (M-1) + 2 + (M-1)x2 + 2 =
                      00109 ; = (2 + 4M + 4KM) ciclos mÃ¡quina. Para K=249 y M=1 supone 1002 ciclos mÃ¡quina
                      00110 ; que a 4 MHz son 1002 Âµs = 1 ms.
                      00111 ;
0229                  00112 Retardos_ms
0229   00D4           00113         movwf   R_ContB                 ; Aporta 1 ciclo mÃ¡quina.
022A                  00114 R1ms_BucleExterno
022A   30F9           00115         movlw   d'249'                  ; Aporta Mx1 ciclos mÃ¡quina. Este es el valor de "K".
022B   00D3           00116         movwf   R_ContA                 ; Aporta Mx1 ciclos mÃ¡quina.
022C                  00117 R1ms_BucleInterno
022C   0000           00118         nop                             ; Aporta KxMx1 ciclos mÃ¡quina.
022D   0BD3           00119         decfsz  R_ContA,F               ; (K-1)xMx1 cm (cuando no salta) + Mx2 cm (al saltar).
022E   2A2C           00120         goto    R1ms_BucleInterno               ; Aporta (K-1)xMx2 ciclos mÃ¡quina.
022F   0BD4           00121         decfsz  R_ContB,F               ; (M-1)x1 cm (cuando no salta) + 2 cm (al saltar).
0230   2A2A           00122         goto    R1ms_BucleExterno       ; Aporta (M-1)x2 ciclos mÃ¡quina.
0231   0008           00123         return                          ; El salto del retorno aporta 2 ciclos mÃ¡quina.
                      00124 ;
                      00125 ;En total estas subrutinas tardan:
                      00126 ; - Retardo_200ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 200007 cm = 200 ms. (M=200 y K=249).
                      00127 ; - Retardo_100ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 100007 cm = 100 ms. (M=100 y K=249).
                      00128 ; - Retardo_50ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  50007 cm =  50 ms. (M= 50 y K=249).
                      00129 ; - Retardo_20ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  20007 cm =  20 ms. (M= 20 y K=249).
                      00130 ; - Retardo_10ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  10007 cm =  10 ms. (M= 10 y K=249).
                      00131 ; - Retardo_5ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   5007 cm =   5 ms. (M=  5 y K=249).
                      00132 ; - Retardo_2ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   2007 cm =   2 ms. (M=  2 y K=249).
                      00133 ; - Retardo_1ms  :      2 + 1     + (2 + 4M + 4KM) =   1005 cm =   1 ms. (M=  1 y K=249).
                      00134 ;
                      00135 ; RETARDOS de 0.5 hasta 20 segundos ---------------------------------------------------
                      00136 ;
0232                  00137 Retardo_20s                             ; La llamada "call" aporta 2 ciclos mÃ¡quina.
0232   30C8           00138         movlw   d'200'                  ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "N".
0233   2A3D           00139         goto    Retardo_1Decima         ; Aporta 2 ciclos mÃ¡quina.
0234                  00140 Retardo_10s                             ; La llamada "call" aporta 2 ciclos mÃ¡quina.
0234   3064           00141         movlw   d'100'                  ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "N".
0235   2A3D           00142         goto    Retardo_1Decima         ; Aporta 2 ciclos mÃ¡quina.
0236                  00143 Retardo_5s                              ; La llamada "call" aporta 2 ciclos mÃ¡quina.
0236   3032           00144         movlw   d'50'                   ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "N".
0237   2A3D           00145         goto    Retardo_1Decima         ; Aporta 2 ciclos mÃ¡quina.
0238                  00146 Retardo_2s                              ; La llamada "call" aporta 2 ciclos mÃ¡quina.
0238   3014           00147         movlw   d'20'                   ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "N".
0239   2A3D           00148         goto    Retardo_1Decima         ; Aporta 2 ciclos mÃ¡quina.
023A                  00149 Retardo_1s                              ; La llamada "call" aporta 2 ciclos mÃ¡quina.
023A   300A           00150         movlw   d'10'                   ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "N".
023B   2A3D           00151         goto    Retardo_1Decima         ; Aporta 2 ciclos mÃ¡quina.
023C                  00152 Retardo_500ms                           ; La llamada "call" aporta 2 ciclos mÃ¡quina.
023C   3005           00153         movlw   d'5'                    ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "N".
                      00154 ;
                      00155 ; El prÃ³ximo bloque "Retardo_1Decima" tarda:
                      00156 ; 1 + N + N + MxN + MxN + KxMxN + (K-1)xMxN + MxNx2 + (K-1)xMxNx2 +
                      00157 ;   + (M-1)xN + Nx2 + (M-1)xNx2 + (N-1) + 2 + (N-1)x2 + 2 =
                      00158 ; = (2 + 4M + 4MN + 4KM) ciclos mÃ¡quina. Para K=249, M=100 y N=1 supone 100011
                      00159 ; ciclos mÃ¡quina que a 4 MHz son 100011 Âµs = 100 ms = 0,1 s = 1 dÃ©cima de segundo.
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00160 ;
023D                  00161 Retardo_1Decima
023D   00D5           00162         movwf   R_ContC                 ; Aporta 1 ciclo mÃ¡quina.
023E                  00163 R1Decima_BucleExterno2
023E   3064           00164         movlw   d'100'                  ; Aporta Nx1 ciclos mÃ¡quina. Este es el valor de "M".
023F   00D4           00165         movwf   R_ContB                 ; Aporta Nx1 ciclos mÃ¡quina.
0240                  00166 R1Decima_BucleExterno
0240   30F9           00167         movlw   d'249'                  ; Aporta MxNx1 ciclos mÃ¡quina. Este es el valor de "K".
0241   00D3           00168         movwf   R_ContA                 ; Aporta MxNx1 ciclos mÃ¡quina.
0242                  00169 R1Decima_BucleInterno          
0242   0000           00170         nop                             ; Aporta KxMxNx1 ciclos mÃ¡quina.
0243   0BD3           00171         decfsz  R_ContA,F               ; (K-1)xMxNx1 cm (si no salta) + MxNx2 cm (al saltar).
0244   2A42           00172         goto    R1Decima_BucleInterno   ; Aporta (K-1)xMxNx2 ciclos mÃ¡quina.
0245   0BD4           00173         decfsz  R_ContB,F               ; (M-1)xNx1 cm (cuando no salta) + Nx2 cm (al saltar).
0246   2A40           00174         goto    R1Decima_BucleExterno   ; Aporta (M-1)xNx2 ciclos mÃ¡quina.
0247   0BD5           00175         decfsz  R_ContC,F               ; (N-1)x1 cm (cuando no salta) + 2 cm (al saltar).
0248   2A3E           00176         goto    R1Decima_BucleExterno2  ; Aporta (N-1)x2 ciclos mÃ¡quina.
0249   0008           00177         return                          ; El salto del retorno aporta 2 ciclos mÃ¡quina.
                      00178 ;
                      00179 ;En total estas subrutinas tardan:
                      00180 ; - Retardo_20s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 20000807 cm = 20 s.
                      00181 ;                       (N=200, M=100 y K=249).
                      00182 ; - Retardo_10s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 10000407 cm = 10 s.
                      00183 ;                       (N=100, M=100 y K=249).
                      00184 ; - Retardo_5s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  5000207 cm =  5 s.
                      00185 ;                       (N= 50, M=100 y K=249).
                      00186 ; - Retardo_2s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  2000087 cm =  2 s.
                      00187 ;                       (N= 20, M=100 y K=249).
                      00188 ; - Retardo_1s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  1000047 cm =  1 s.
                      00189 ;                       (N= 10, M=100 y K=249).
                      00190 ; - Retardo_500ms:      2 + 1     + (2 + 4N + 4MN + 4KMN) =   500025 cm = 0,5 s.
                      00191 ;                       (N=  5, M=100 y K=249).
                      00192 
                      00193 ;       ===================================================================
                      00194 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
                      00195 ;         E. Palacios, F. Remiro y L. LÃ³pez.
                      00196 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00197 ;       =====================================================
                      00404 ;-----------------------------------;Librerias
Warning[205]: Found directive in column 1. (END)
                      00405 END
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AJUSTE                            00000083
AJUSTE_HUM                        00000086
Arit_Cociente_H                   0000003C
Arit_Cociente_L                   0000003D
Arit_ContadorBits                 00000039
Arit_DivideBit16                  0000012E
Arit_Divide_16Bit                 00000129
Arit_Dividendo_H                  0000003A
Arit_Dividendo_L                  0000003B
Arit_Divisor                      0000003F
Arit_Multiplica16Bit              00000118
Arit_MultiplicaBit8               0000010A
Arit_Multiplica_16Bit             00000112
Arit_Multiplica_8Bit              00000105
Arit_Multiplicador                00000032
Arit_Multiplicador_BitCero        00000122
Arit_Multiplicador_H              00000034
Arit_Multiplicador_L              00000036
Arit_Multiplicando                00000031
Arit_Multiplicando_H              00000033
Arit_Multiplicando_L              00000035
Arit_Negar                        000000F5
Arit_Operando_1H                  00000040
Arit_Operando_1L                  00000041
Arit_Operando_2H                  00000042
Arit_Operando_2L                  00000043
Arit_Producto_1H                  00000044
Arit_Producto_1L                  00000045
Arit_Producto_2H                  00000046
Arit_Producto_2L                  00000047
Arit_Producto_H                   00000038
Arit_Producto_L                   00000037
Arit_Resta_16Bit                  000000FD
Arit_Resto                        0000003E
Arit_Suma_16Bit                   000000FE
Auxiliar                          00000029
BCD_Centenas                      00000048
BCD_Decenas                       00000049
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

BCD_IncrementaCentenas            00000148
BCD_IncrementaDecenas             00000142
BCD_Resta10                       0000013E
BCD_Unidades                      0000004A
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BIN_BCD_Fin                       0000014B
BIN_a_BCD                         0000013B
BOMBITA                           PORTC,2
BRGH                              00000002
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CALCULO_HUM                       00000072
CALCULO_TEMP                      00000063
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CIS                               00000003
CKE                               00000006
CKP                               00000004
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000009C
CMIE                              00000006
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

CMIF                              00000006
COM_H                             00000001
COM_MS                            0000003C
CONT                              0000002C
CONVERSION                        0000002C
CONVERSION_ADC                    00000094
CREN                              00000004
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            0000009D
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
CargaTMR0                         0000003D
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DESBORDAMIENTO                    000000F0
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
ESPERA                            00000026
F                                 00000001
FERR                              00000002
FIN_INT                           0000002A
FIN_RELOJ                         000000EF
FSR                               00000004
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
GUARDAR_HUM                       0000003B
GUARDAR_TEMP                      0000002F
HUMFH                             00000027
HUMFL                             00000028
HUMH                              00000023
HUML                              00000024
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

IBF                               00000007
IBOV                              00000005
INDF                              00000000
INICIO                            00000005
INT                               00000027
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
LCD_2Lineas4Bits5x7               000001BC
LCD_ApuntaCaracter                0000004B
LCD_Auxiliar1                     00000051
LCD_Auxiliar2                     00000052
LCD_Borra                         000001BA
LCD_BusDatos                      PORTD
LCD_Byte                          000001EC
LCD_ByteCompleto                  000001F3
LCD_Caracter                      000001BF
LCD_CaracteresPorLinea            00000010
LCD_CodigoCGROM                   000001C9
LCD_CursorIncr                    000001A6
LCD_CursorOFF                     000001B8
LCD_CursorON                      000001B6
LCD_CursorPosicion                0000004D
LCD_Dato                          0000004E
LCD_DosEspaciosBlancos            000001E3
LCD_EnheMayuscula                 000001D0
LCD_EnheMinuscula                 000001CA
LCD_Envia                         000001C1
LCD_EnviaBlancos                  000001E6
LCD_EnviaByteLetra                000001FF
LCD_EnviaComando                  000001BD
LCD_EnviaOtroBlanco               000001E7
LCD_EsFinalLinea                  00000166
LCD_EscribeLCD                    00000190
LCD_FinCGROM                      000001DD
LCD_FinMensaje                    0000015B
LCD_FinMovimiento                 00000175
LCD_FinVisualizaDigito            00000201
LCD_Grado                         000001D7
LCD_GuardaDato                    0000004F
LCD_GuardaTRISD                   00000050
LCD_Inicializa                    00000176
LCD_Linea1                        000001A8
LCD_Linea2                        000001AA
LCD_LineaEnBlanco                 000001DF
LCD_Mensaje                       0000014E
LCD_MensajeMovimiento             0000015C
LCD_Nibble                        000001F7
LCD_NoEsFinalLinea                0000016B
LCD_NoUltimoCaracter              00000158
LCD_NoUltimoCaracter2             00000171
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

LCD_OFF                           000001B4
LCD_PinEnable                     PORTE,2
LCD_PinRS                         PORTE,0
LCD_PinRW                         PORTE,1
LCD_PosicionLinea1                000001B0
LCD_PosicionLinea2                000001B2
LCD_PrimeraPosicion               00000160
LCD_TresEspaciosBlancos           000001E5
LCD_UnEspacioBlanco               000001E1
LCD_ValorCaracter                 0000004C
LCD_VisualizaAlto                 000001F4
LCD_VisualizaBajo                 000001F6
LCD_VisualizaCaracter             00000162
LCD_VisualizaOtroCaracter         00000152
LIMPIAR_PWM                       000000BD
LIMPIA_REG                        000000B3
LIMPIEZA_ADC                      000000C3
M0                                00000099
M1                                000000A0
M2                                000000AA
M3                                000000AC
Mensajes                          00000098
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
PWM                               0000001D
R                                 00000002
R1Decima_BucleExterno             00000240
R1Decima_BucleExterno2            0000023E
R1Decima_BucleInterno             00000242
R1ms_BucleExterno                 0000022A
R1ms_BucleInterno                 0000022C
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
REFRESCADO                        000000C8
RELOJ                             000000CB
RESH                              0000002A
RESL                              0000002B
RESULTADO                         0000008F
RETARDO_CARGA                     000000AE
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_ContA                           00000053
R_ContB                           00000054
R_ContC                           00000055
R_NOT_W                           00000002
R_W                               00000002
Retardo                           000000B0
RetardoMicros                     00000216
Retardo_100micros                 00000210
Retardo_100ms                     0000021C
Retardo_10micros                  00000202
Retardo_10ms                      00000222
Retardo_10s                       00000234
Retardo_1Decima                   0000023D
Retardo_1ms                       00000228
Retardo_1s                        0000023A
Retardo_200micros                 0000020D
Retardo_200ms                     0000021A
Retardo_20micros                  00000215
Retardo_20ms                      00000220
Retardo_20s                       00000232
Retardo_2ms                       00000226
Retardo_2s                        00000238
Retardo_4micros                   00000209
Retardo_500micros                 0000020A
Retardo_500ms                     0000023C
Retardo_50micros                  00000212
Retardo_50ms                      0000021E
Retardo_5micros                   00000208
Retardo_5ms                       00000224
Retardo_5s                        00000236
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

Retardoini                        00000020
Retardos_ms                       00000229
Rmicros_Bucle                     00000217
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
S_H                               000000E0
S_M                               000000D6
S_S                               000000CB
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TEMP                              00000030
TEMPFH                            00000026
TEMPFL                            00000025
TEMPH                             00000022
TEMPL                             00000021
TIMR2_CONFIG                      0000001A
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR0_1s                           00000014
TMR0_5s                           00000064
TMR1CS                            00000001
TMR1H                             0000000F
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
VISUALIZAR_DATOS                  00000044
W                                 00000000
WCOL                              00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00001FFF
_CP_OFF                           00003FFF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FFD
__16F877A                         00000001
horas                             0000002F
ledsito                           PORTC,0
limpieza_reloj                    000000E7
minutos                           0000002E
retorno_min                       000000DD
retorno_seg                       000000D3
segundos                          0000002D
MPASM  5.39         INVERNADERO_V5_PWM_T0.ASM   6-21-2024  15:08:05         PAGE 38


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0000 : X---XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXX------ ---------------- ---------------- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   583
Program Memory Words Free:  7609


Errors   :     0
Warnings :    31 reported,     0 suppressed
Messages :    19 reported,     0 suppressed

