MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Warning[205]: Found directive in column 1. (LIST)
                      00001 LIST      p=16F877A ; Define el microcontrolador
Warning[205]: Found directive in column 1. (INCLUDE)
                      00002 INCLUDE   <p16F877A.inc> ; Incluye la librería del PIC16F877A
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F877A processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2010 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00555         LIST
Warning[205]: Found directive in column 1. (__CONFIG)
2007   3F31           00003 __CONFIG  _XT_OSC & _WDT_OFF & _PWRTE_ON & _BODEN_OFF & _LVP_OFF ; Configuración de fusibles
                      00004      CBLOCK 0x20        
  00000020            00005                 Retardoini                      ; retardo inicial
  00000021            00006                 TEMPL                           ;Registro bajo de temperatura
  00000022            00007                 TEMPH                           ;Registro alto de temperatura
  00000023            00008                 HUMH                            ;Registro alto de humedad
  00000024            00009                 HUML                            ;Registro bajo de humedad
                      00010                 ;MULTH                          ;Resultado de 8 bits de la multiplicacion       - ALTO
                      00011                 ;MULTL                          ;Resultado de 8 bits de la multiplicacion       - BAJO
  00000025            00012                 TEMPF2L                         ;Registro FINAL bajo de temperatura
  00000026            00013                 TEMPF2H                         ;Registro FINAL alto de temperatura
  00000027            00014                 TEMPFL                          ;Registro FINAL bajo de temperatura
  00000028            00015                 TEMPFH                          ;Registro FINAL alto de temperatura
  00000029            00016                 HUMFH                           ;Registro FINAL alto de humedad
  0000002A            00017                 HUMFL                           ;Registro FINAL bajo de humedad
  0000002B            00018                 Auxiliar
  0000002C            00019                 RESH                            ;Inversión de humedad - alto
  0000002D            00020                 RESL                            ;Inversión de humedad - bajo 
  0000002E            00021                 Hora                            ;Guarda las horas.
  0000002F            00022                 Minuto                          ;Guarda los minutos.    
  00000030            00023                 Segundo                         ;Guarda los segundos.
  00000031            00024                 MedioSegundo            ;Se incrementa cada medio segundo.
  00000032            00025                 Registro50ms            ;Se incrementa cada 50ms.
                      00026      ENDC               
                      00027 
  FFFFFF3D            00028 TMR0_Carga50ms  EQU     -d'195'         ;Para conseguir la interrupción del
                      00029                                                                 ;Timer 0 cada 50 ms.                    
                                            
                      00030 ;-----------------------------------;Variables temporales y de uso común
                      00031 ;LCD = PORTD para datos - PORTE para RW, RS y E.
                      00032 ;ADC PORTA - Usaremos AN0 para el LM35.
                      00033 ;ADC PORTA - Usaremos AN1 para el HW-080
                      00034 ;Ocuparemos solamente TEMPL; esto ya que no encontraremos temperaturas mayores a 120 grados celcius.
                      00035         ;Este es un registro de 8 bits el cual deberemos de multiplicar por 100.
                      00036 ;Para el sensor de humedad parece que tambien se multiplica por 100; por lo que sera le mismo procedimie
                            nto.
                      00037                                         
                      00038                                         ;---------OBSERVACIONES---------Usando solo 8 bits----;
                      00039 ;TEMPERATURA
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00040 ;Nosotros sabemos que nuestra temperatura estará entre 0 y 1023, sin embargo no sabemos la cantidad de b
                            its que representan
                      00041 ;nuestra muestra; por lo que tenemos que calcularla. Si 5V son los 1024 bits; cuanto será el valor que o
                            btenemos del sensor?
                      00042 
                      00043 ;Digamos que obtenemos una lectura 35 grados, el LM35 nos dará 0.35V, simplemente sacamos una regla de 3
                            :
                      00044 ;                               (0.35V)(1024bits)                                                       
                                                 (35'C)(ValorLeido)(bits)
                      00045 ;               Bits = ------------------ = 61.44 bits  :Ahora se calcula la T = -----------------------
                            - = ValorLeido * 0.48
                      00046 ;                                          5V                                                           
                                                                        61.44 bits
                      00047 
                      00048 ;El 0.48 es una constante que se mantiene en cualquier temperatura en la cual se realice el despeje, por
                             lo que la tomamos 
                      00049 ;para nuestros calculos.
                      00050 
                      00051 ;HUMEDAD
                      00052 ;En el HW-080 mientras más cerca este el valor medido a 1023, más seco estará el ambiente
                      00053                                         ;-----------------------------------------------------;
                      00054         
0000                  00055         org 0x00        
0000   2805           00056         goto INICIO
0004                  00057         org 0x04
0004   281D           00058         goto INTTM0                     
                      00059 
0005                  00060 INICIO
0005   20B1           00061         call LIMPIA_REG                 ;Limpieza en cada ciclado
0006   1683           00062         bsf     STATUS,RP0                      ;Acceso al Banco 1.
0007   3007           00063         movlw   b'00000111'             ;Prescaler de 256 para el TMR0 y habilita
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0008   0081           00064         movwf   OPTION_REG              
0009   01AE           00065         clrf    Hora                    ;Inicializa todos los datos del reloj. 
000A   01AF           00066         clrf    Minuto
000B   01B0           00067         clrf    Segundo
000C   01B1           00068         clrf    MedioSegundo
000D   01B2           00069         clrf    Registro50ms            
000E   30A0           00070         movlw   b'10100000'             ;Activa interrupción del TMR0 (TOIE)
000F   008B           00071         movwf   INTCON                  ;y la general (GIE).
                      00072 ;-----------------------------------;
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0010   1405           00073     bsf TRISA,0                         ;Activamos AN0 - Sensor Temperatura 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0011   1485           00074         bsf TRISA,1                             ;Activamos AN1 - Sensor Humedad
0012   3082           00075         movlw   b'10000010'             ;Just.Der, Fosc/8, D=AN7,6,5 AD=AN4,3,2,1,0
                      00076                                                         ;ADFM/ADCS2/0/0/PCFG3/PCFG2/PCFG1/PCFG0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0013   009F           00077         movwf   ADCON1                  ;registro 1 de configuraciòn A/D 
                      00078         
0014   1283           00079     bcf     STATUS,RP0          ;seleccione Banco 0
                      00080 ;-----------------------------------;Se configura ADCON1
0015   3040           00081         movlw   b'01000000'             ;Fosc/8, Canal AN0, GO_Done, 0, AD_ON OFF
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00082                                                         ;ADCS1/ADCS0/CHS2/CHS1/CHS0/GO_DONE/0/ADON
0016   009F           00083         movwf   ADCON0                  ;registro 0 de configuraciòn A/D
0017   141F           00084         bsf             ADCON0,ADON             ;enciende el ADC
                      00085         
                      00086                                                         ;hacer retardo inicial de Tacq
                      00087                                                         ;retardo de tiempo de adquisicion de al menos 19
                            .72 us
                      00088                                                         ;20us (Tcy=1us, a 4MHz) son 20*Tcy de espera
                      00089 ;-----------------------------------;Se configura el ADCON0
0018   20AC           00090         call RETARDO_CARGA              
0019   303D           00091         movlw   TMR0_Carga50ms  ;Carga el TMR0.
001A   0081           00092         movwf   TMR0                    ;Comienza la cuenta del TIMER0
001B   213B           00093         call LCD_Inicializa             ;Iniciamos el LCD
                      00094 ;-----------------------------------;Retardo de carga para el circuito interno RC
001C                  00095 PRINCIPAL
001C   281C           00096         goto PRINCIPAL
                      00097 ;-----------------------------------;Ciclo principal de espera 
001D                  00098 INTTM0
001D   1D0B           00099         btfss   INTCON,T0IF             ;Si la bandera está en alto, hubo una interrupcion
001E   2821           00100         goto    FinInterrupcion ;Si no fue una interrupción por bandera, entonces no actualizamos la tem
                            p.
Error[113]  : Symbol not previously defined (Reloj)
001F   2000           00101         call    Reloj                   
0020   2023           00102         call    CONVERSION              
0021                  00103 FinInterrupcion                         ;Termina la interrupcion 
0021   110B           00104         bcf     INTCON,T0IF                     
0022   0009           00105         retfie                                  
                      00106 
0023                  00107 CONVERSION
0023   217F           00108         call LCD_Borra
                      00109 ;-----------------------------------;Punto de ciclaje
0024   1283           00110         bcf STATUS,RP0
0025   119F           00111         bcf ADCON0,3
                      00112 ;-----------------------------------;Cambio de canal al AN0 al momento de ciclar
0026                  00113 GUARDAR_TEMP
0026   20AC           00114         call RETARDO_CARGA
0027   208B           00115         call CONVERSION_ADC                             ;Iniciamos la conversion ADC en el canal AN0
0028   081E           00116         movf ADRESH, 0
0029   00A2           00117         movwf TEMPH
                      00118 ;-----------------------------------;Guardamos la parte alta de la muestra - Temperatura
002A   1683           00119         bsf STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
002B   081E           00120         movf ADRESL, 0
002C   1283           00121         bcf STATUS, RP0
002D   00A1           00122         movwf TEMPL     
002E   205A           00123         call CALCULO_TEMP                               ;Calculamos el valor de la temperatura
                      00124 ;-----------------------------------;Termina de leer el LM35 y ahora lee el HW-080
002F   1283           00125         bcf STATUS,RP0
0030   159F           00126         bsf ADCON0,3
                      00127 ;-----------------------------------;Cambio de canal de AN0 a AN1
0031                  00128 GUARDAR_HUM     
0031   20AC           00129         call RETARDO_CARGA
0032   208B           00130         call CONVERSION_ADC                             ;Iniciamos la conversion ADC en el canal AN1
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0033   081E           00131         movf ADRESH, 0
0034   00A3           00132         movwf HUMH
                      00133 ;-----------------------------------;Guardamos la parte alta de la muestra - Humedad
0035   1683           00134         bsf STATUS, RP0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0036   081E           00135         movf ADRESL, 0
0037   1283           00136         bcf STATUS, RP0
0038   00A4           00137         movwf HUML
0039   2069           00138         call CALCULO_HUM
Warning[203]: Found opcode in column 1. (goto)
003A   283B           00139 goto VISUALIZAR_DATOS
                      00140 ;-----------------------------------;Guardamos la parte baja de la muestra - Humedad
003B                  00141 VISUALIZAR_DATOS
003B   217F           00142         call LCD_Borra
003C   3090           00143         movlw M0
003D   2113           00144         call LCD_Mensaje
003E   21A6           00145         call LCD_UnEspacioBlanco                        ;Temperatura: 
003F   0827           00146         movf TEMPFL,W                                           ;Ahora se visualiza en decimal.
0040   2100           00147         call BIN_a_BCD                                          ;Primero se convierte a BCD.
0041   00AB           00148         movwf Auxiliar                                          ;Guarda las decenas y unidades.
0042   207A           00149         call AJUSTE                                                     ;Ajuste de 1 visualizado en la s
                            imulacion
0043   084A           00150         movf BCD_Centenas,W                                     ;Visualiza centenas.
0044   21BC           00151         call LCD_Nibble                                         
0045   082B           00152         movf Auxiliar,W                                         ;Visualiza las decenas y unidades.
0046   21B8           00153         call LCD_ByteCompleto                           
0047   21A6           00154         Call LCD_UnEspacioBlanco
0048   30A8           00155         movlw M2
0049   2113           00156         call LCD_Mensaje
                      00157 
004A   216F           00158         call LCD_Linea2
004B   309E           00159         movlw M1
004C   2113           00160         call LCD_Mensaje
004D   21A6           00161         call LCD_UnEspacioBlanco                        ;Humedad: 
004E   082A           00162         movf HUMFL,W                                            ;Ahora se visualiza en decimal. - prueba
                      00163         ;movf RESL,W                                                    ;Ahora se visualiza en decimal. 
                            - prueba
004F   2100           00164         call BIN_a_BCD                                          ;Primero se convierte a BCD.
0050   00AB           00165         movwf Auxiliar                                          ;Guarda las decenas y unidades.
0051   207A           00166         call AJUSTE                                                     ;Ajuste de 1 visualizado en la s
                            imulacion
0052   084A           00167         movf BCD_Centenas,W                                     ;Visualiza centenas.
0053   21BC           00168         call LCD_Nibble                                         
0054   082B           00169         movf Auxiliar,W                                         ;Visualiza las decenas y unidades.
0055   21B8           00170         call LCD_ByteCompleto
0056   21A6           00171         Call LCD_UnEspacioBlanco
0057   30AA           00172         movlw M3
0058   2113           00173         call LCD_Mensaje
                      00174 ;call Retardo_2s                                                ;Retardo antes de refresco              
                                            
                      00175 ;goto CONVERSION
Warning[203]: Found opcode in column 1. (return)
0059   0008           00176 return  
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00177 ;-----------------------------------;Ciclamos la conversion ADC
005A                  00178 CALCULO_TEMP
005A   0821           00179         movf TEMPL,0                                            ;Usamos el nibble bajo de la muestra, po
                            demos ignorar los 2 bits mas significativos
005B   00B3           00180         movwf Arit_Multiplicando
005C   3030           00181         movlw d'48'                                                     ;Constante obtenida de la regla 
                            de 3 en bits 
005D   00B4           00182         movwf Arit_Multiplicador
005E   20CA           00183         call Arit_Multiplica_8Bit
005F   083A           00184         movf Arit_Producto_H,0                          
0060   00BC           00185         movwf Arit_Dividendo_H
0061   0839           00186         movf Arit_Producto_L,0
0062   00BD           00187         movwf Arit_Dividendo_L
                      00188                                                                                 ;No es posible multiplic
                            ar por 0.48, por lo que primero se multiplica por 48 y despues se divide por 100
0063   3064           00189         movlw d'100'                                            ;Dividimos entre 100 ya que no es posibl
                            e multiplicar por 0.48
0064   00C1           00190         movwf Arit_Divisor      
0065   20EE           00191         call Arit_Divide_16Bit                          ;Una vez dividido sería como solo multiplicar TE
                            MPL por 0.48
0066   083F           00192         movf Arit_Cociente_L,0                          ;Usamos solo la parte baja del resultado, este a
                            barca de 0 a 255
0067   00A7           00193         movwf TEMPFL                                            
Warning[203]: Found opcode in column 1. (return)
0068   0008           00194 return
                      00195 ;-----------------------------------;Subrutina para calculo de temperatura
0069                  00196 CALCULO_HUM
0069   0824           00197         movf HUML,0
006A   00B3           00198         movwf Arit_Multiplicando
006B   3030           00199         movlw d'48'
006C   00B4           00200         movwf Arit_Multiplicador
006D   20CA           00201         call Arit_Multiplica_8Bit
006E   083A           00202         movf Arit_Producto_H,0
006F   00BC           00203         movwf Arit_Dividendo_H
0070   0839           00204         movf Arit_Producto_L,0
0071   00BD           00205         movwf Arit_Dividendo_L
                      00206         
0072   3064           00207         movlw d'100'
0073   00C1           00208         movwf Arit_Divisor
0074   20EE           00209         call Arit_Divide_16Bit
0075   083F           00210         movf Arit_Cociente_L,0                  
0076   00AA           00211         movwf HUMFL
0077   083E           00212         movf Arit_Cociente_H,0                  
0078   00A9           00213         movwf HUMFH
                      00214         ;call AJUSTE_HUM                                        ;Recordemos que mientras mayor sea la mu
                            estra, entonces mas seco estará
                      00215                                                                         ;Debemos arreglar la logica
Warning[203]: Found opcode in column 1. (return)
0079   0008           00216 return
                      00217 ;-----------------------------------;Subrutina para calculo de humedad
007A                  00218 AJUSTE
007A   3001           00219         movlw d'1'
Message[305]: Using default destination of 1 (file).
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007B   07AB           00220         addwf Auxiliar
Warning[203]: Found opcode in column 1. (return)
007C   0008           00221 return 
                      00222 ;-----------------------------------;Subrutina de ajuste general
007D                  00223 AJUSTE_HUM                                                      ;1023 - Muestra = Ajuste en porcentaje r
                            eal
007D   3004           00224         movlw 0x04
007E   00C4           00225         movwf Arit_Operando_2H
007F   3000           00226         movlw 0x00
0080   00C5           00227         movwf Arit_Operando_2L
                      00228                                                                         ;Guardamos primero el 1024
0081   0829           00229         movf  HUMFH,0
0082   00C2           00230         movwf Arit_Operando_1H
0083   082A           00231         movf  HUMFL,0
0084   00C3           00232         movwf Arit_Operando_1L                  ;Guardamos nuestra muestra de temperatura en OPERANDO 1
0085   20C2           00233         call Arit_Resta_16Bit                   ;OPERANDO2 - OPERANDO1 
0086                  00234 RESULTADO                                                       ;De acuerdo a la libreria, el resultado 
                            se guarda en OPERANDO 2
0086   0844           00235         movf Arit_Operando_2H,0
0087   00AC           00236         movwf RESH
0088   0845           00237         movf Arit_Operando_2L,0
0089   00AD           00238         movwf RESL
Warning[203]: Found opcode in column 1. (return)
008A   0008           00239 return
                      00240 ;-----------------------------------;Subrutina de logica - humedad
008B                  00241 CONVERSION_ADC
008B   151F           00242         bsf             ADCON0,GO_DONE  ;Comienza la conversion
008C   191F           00243         btfsc   ADCON0,GO_DONE  ;GO_DONE = 0 - Termina conversion y salta
008D   288C           00244         GOTO            $-1                     ;Siempre y cuando no acabe, regresamos
Warning[203]: Found opcode in column 1. (return)
008E   0008           00245 return
                      00246 ;------------------------------------;Subrutina para inicio de conversion ADC
008F                  00247 Mensajes 
008F   0782           00248                 addwf PCL,F
Warning[207]: Found label after column 1. (M0)
0090                  00249         M0
0090   3454 3465 346D 00250                 DT "Temperatura: ", 0x00
       3470 3465 3472 
       3461 3474 3475 
       3472 3461 343A 
       3420 3400 
Warning[207]: Found label after column 1. (M1)
009E                  00251         M1
009E   3448 3475 346D 00252                 DT "Humedad: ", 0x00
       3465 3464 3461 
       3464 343A 3420 
       3400 
Warning[207]: Found label after column 1. (M2)
00A8                  00253         M2
00A8   3443 3400      00254                 DT "C",0x00
Warning[207]: Found label after column 1. (M3)
00AA                  00255         M3
00AA   3425 3400      00256                 DT "%",0x00
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00257 ;-----------------------------------;Mensajes
00AC                  00258 RETARDO_CARGA
00AC   3014           00259         movlw   d'20'                   ;carga valor 20 decimal
00AD   00A0           00260         movwf   Retardoini          ;en retardo inicial
00AE                  00261 Retardo
00AE   0BA0           00262         decfsz  Retardoini,f    ;decremente retardo inicial
00AF   28AE           00263     goto    Retardo             ;si no termina ciclo, va a Retardo
Warning[203]: Found opcode in column 1. (return)
00B0   0008           00264 return                                          ;una vez termina, se cumplen los 20us y regresamos
                      00265 ;-----------------------------------;Retardo Inicial para el ADC = 20us
00B1                  00266 LIMPIA_REG
00B1   01A1           00267         clrf TEMPL                              ;Registro bajo de temperatura
00B2   01A2           00268         clrf TEMPH                              ;Registro alto de temperatura
00B3   01A3           00269         clrf HUMH                               ;Registro alto de humedad
00B4   01A4           00270         clrf HUML                               ;Registro bajo de humedad
                      00271         ;clrf MULTH                             ;Resultado de 8 bits de la multiplicacion       - ALTO
                      00272         ;clrf MULTL                             ;Resultado de 8 bits de la multiplicacion       - BAJO
00B5   01A7           00273         clrf TEMPFL                             ;Registro FINAL bajo de temperatura
00B6   01A8           00274         clrf TEMPFH                             ;Registro FINAL alto de temperatura
00B7   01A9           00275         clrf HUMFH                              ;Registro FINAL alto de humedad
00B8   01AA           00276         clrf HUMFL                              ;Registro FINAL bajo de humedad
Warning[203]: Found opcode in column 1. (return)
00B9   0008           00277 return 
                      00278 ;-----------------------------------;Subrutina de limpieza de variables
                      00279         INCLUDE <ARIT.INC>
                      00001 ;
                      00002 ; Librerú} de subrutinas con diversas operaciones aritméticas:
                      00003 ;
                      00004 ; - Arit_VisualizaBinario: Visualiza en el LCD el dato en binario que le entra por W.
                      00005 ; - Arit_Negar: Niega el contenido de un número binario de 16 bits.
                      00006 ; - Arit_Suma_16Bit: Realiza la suma con dos registros de 16 bits.
                      00007 ; - Arit_Resta_16Bit: Realiza la resta con dos registros de 16 bits.
                      00008 ; - Arit_Multiplica_8Bit: Multiplica dos registros de 8 bits.
                      00009 ; - Arit_Multiplica_16Bit: Multiplica dos registros de 16 bits.
                      00010 ; - Arit_Divide_8Bit: Divide dos registros de 8 bits.
                      00011 ; - Arit_Divide_16Bit: Divide un registro de 16 bits entre otro de 7 bits.
                      00012 ; - Arit_BCD_Bin_16Bit: Convierte un número BCD de 5 dúitos a binario natural de 16 bits.
                      00013 ; - Arit_Bin_BCD_16Bit: Convierte un número binario de 16 bits a BCD de 5 dúitos.
                      00014 ; - Arit_VisualizaBCD: Visualiza en el LCD un número decimal de varios dúitos.
                      00015 
                      00016         CBLOCK
  00000033            00017         Arit_Multiplicando
  00000034            00018         Arit_Multiplicador
  00000035            00019         Arit_Multiplicando_H                            ; Byte bajo del operando 1.
  00000036            00020         Arit_Multiplicador_H                            ; Byte bajo del operando 2.
  00000037            00021         Arit_Multiplicando_L                            ; Byte bajo del operando 1.
  00000038            00022         Arit_Multiplicador_L
  00000039            00023         Arit_Producto_L                         ; Byte bajo del byte 1 del resultado.
  0000003A            00024         Arit_Producto_H                         ; Byte alto del byte 1 del resultado.
  0000003B            00025         Arit_ContadorBits                               ; Para realizar diferentes contadores con bits.
  0000003C            00026         Arit_Dividendo_H
  0000003D            00027         Arit_Dividendo_L
  0000003E            00028         Arit_Cociente_H
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000003F            00029         Arit_Cociente_L
  00000040            00030         Arit_Resto
  00000041            00031         Arit_Divisor
                      00032 ;       Arit_Auxiliar                                   ; Registro temporal para realizar operaciones in
                            termedias.
  00000042            00033         Arit_Operando_1H
  00000043            00034         Arit_Operando_1L
  00000044            00035         Arit_Operando_2H                        ;para resta de 16 bits. Aqui guarda el resultado.
  00000045            00036         Arit_Operando_2L
  00000046            00037         Arit_Producto_1H                
  00000047            00038         Arit_Producto_1L                
  00000048            00039         Arit_Producto_2H                
  00000049            00040         Arit_Producto_2L
                      00041 
                      00042         ENDC
                      00043 
                      00044 ; Subrutina "Arit_Negar" ----------------------------------------------------------------
                      00045 ;
                      00046 ; Niega el contenido de un número de 16 bits almacenado en dos registros
                      00047 ; (Arit_Operando_1H, Arit_Operando_1L).
                      00048 ;
                      00049 ; Lo hace en complemento a 2 por el método clásico, es decir, primero invierte todos los bits
                      00050 ; y después le suma "1".
                      00051 ;
                      00052 ; Se utiliza la instrucción "addwf __", en lugar de "incf ___", porque ésta no posiciona
                      00053 ; el flag de Carry.
                      00054 ;
                      00055 ; En el registro de trabajo W también aparece el resultado de la negación del byte bajo.
                      00056 ;
                      00057 ; Entrada:      En los registros (Arit_Operando_1H, Arit_Operando_1L) el dato de 
                      00058 ;                       16 bits a negar.
                      00059 ; Salida:       En los mismo registros (Arit_Operando_1H, Arit_Operando_1L) el dato de 
                      00060 ;                       16 bits negado. En (W) el byte más bajo negado.
                      00061 
00BA                  00062 Arit_Negar
00BA   09C2           00063         comf    Arit_Operando_1H,F              ; Invierte los registros que contienen los operandos.
00BB   09C3           00064         comf    Arit_Operando_1L,F
00BC   3001           00065         movlw   .1                                              ; Le suma 1.
00BD   07C3           00066         addwf   Arit_Operando_1L,F              
00BE   1803           00067         btfsc   STATUS,C                                ; Si hay acarreo tiene que llevarlo al byte supe
                            rior.
00BF   0AC2           00068         incf    Arit_Operando_1H,F      
00C0   0843           00069         movf    Arit_Operando_1L,W              ; En (W) el resultado del byte bajo.
00C1   0008           00070         return
                      00071 
                      00072 
                      00073 ; Subrutinas "Arit_Suma_16Bit" y "Arit_Resta_16Bit" ---------------------------------------
                      00074 ;
                      00075 ; Realiza la suma/resta en 16 bits (Operando 2) +/- (Operando 1) y el resultado lo guarda en
                      00076 ; (Operando 2). El resultado lo guarda en 16 bits. Es decir:
                      00077 ; (Arit_Operando_2H, Arit_Operando_2L) +/- (Arit_Operando_1H, Arit_Operando_1L) --> 
                      00078 ; (Arit_Operando_2H, Arit_Operando_2L).
                      00079 ;
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C2                  00080 Arit_Resta_16Bit
00C2   20BA           00081         call    Arit_Negar                              ; Para la resta, simplemente niega el numero de 
                            16 bits
00C3                  00082 Arit_Suma_16Bit                                         ; (Arit_Operando_1H, Arit_Operando_1L) y suma.
00C3   0843           00083         movf    Arit_Operando_1L,W              ; Suma el byte más bajo.
00C4   07C5           00084         addwf   Arit_Operando_2L,F              ; y lo guarda en Arit_Operando_2L.
00C5   1803           00085         btfsc   STATUS,C                                ; Si hay acarreo incrementa en una unidad uno de
00C6   0AC2           00086         incf    Arit_Operando_1H,F              ; de los bytes altos.
00C7   0842           00087         movf    Arit_Operando_1H,W
00C8   07C4           00088         addwf   Arit_Operando_2H,F              ; Suma el byte alto.
00C9   0008           00089         return
                      00090 
                      00091 
                      00092 ; Subrutinas "Arit_Multiplica_8Bit" ------------------------------------------------------
                      00093 ;
                      00094 ; Realiza la multiplicación del contenido de dos registros de 8 bits. El resultado se almacena
                      00095 ; en 16 bits. La operación se realiza sin signo.
                      00096 ;
                      00097 ; El algoritmo utilizado se basa en el método empleado para efectuar una multiplicación
                      00098 ; manualmente con lápiz y papel. En este método, la multiplicación se lleva a cabo tomando
                      00099 ; un bit del multiplicador, empezando por el menos significativo: 
                      00100 ; - Si es "1" se efectúa la suma del multiplicando y el producto parcial anterior. El producto
                      00101 ;   parcial resultante se desplaza un bit a la derecha, introduciendo un cero por la izquierda.
                      00102 ; - Si es "0" la suma no es necesaria y el producto parcial resultante anterior se desplaza un
                      00103 ;   bit a la derecha, introduciendo además un cero por la izquierda.
                      00104 ;
                      00105 ; Este proceso se repite tantas veces como bits tiene el multiplicador.
                      00106 ;
                      00107 ; Previo a la llamada de esta subrutinas los números a multiplicar se almacenan en los registros
                      00108 ; Arit_Multiplicando y Arit_Multiplicador. El resultado se almacena en 16 bits en los registros 
                      00109 ; (Arit_Producto_H, Arit_Producto_L). Es decir:
                      00110 ; (Arit_Multiplicando) * (Arit_Multiplicador) --> (Arit_Producto_H, Arit_Producto_L)
                      00111 ;
                      00112 ; Se utilizan posiciones de memoria definidas anteriormente, a las que se les cambia el nombre 
                      00113 ; por motivos puramente pedagógicos:
                      00114 
                      00115 
                      00116 
00CA                  00117 Arit_Multiplica_8Bit
00CA   01BA           00118         clrf    Arit_Producto_H                 ; En principio el resultado es cero.
00CB   01B9           00119         clrf    Arit_Producto_L
00CC   3008           00120         movlw   .8                                              ; Carga el contador de 8 bits.
00CD   00BB           00121         movwf   Arit_ContadorBits
00CE   0833           00122         movf    Arit_Multiplicando,W    ; Carga el multiplicando.
00CF                  00123 Arit_MultiplicaBit8
00CF   0CB4           00124         rrf             Arit_Multiplicador,F    ; Va a comprobar el siguiente bit del multiplicador.
00D0   1803           00125         btfsc   STATUS,C                                ; Si el bit del multiplicador es "1"
00D1   07BA           00126         addwf   Arit_Producto_H,F               ; suma el resultado parcial anterior más el multiplicand
                            o.
00D2   0CBA           00127         rrf             Arit_Producto_H,F               ; Desplaza el resultado parcial un lugar hacia l
                            a 
00D3   0CB9           00128         rrf             Arit_Producto_L,F               ; derecha, introduciendo un "0" por la izquierda
                            .
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00D4   0BBB           00129         decfsz  Arit_ContadorBits,F             ; ¿Ha multiplicado los 8 bits?
00D5   28CF           00130         goto    Arit_MultiplicaBit8             ; Repite la operación.
00D6   0008           00131         return
                      00132         
                      00133 
                      00134 ; Subrutinas "Arit_Multiplica_16Bit" ------------------------------------------------------
                      00135 ;
                      00136 ; Realiza la multiplicación del contenido de dos registros de 16 bits. El resultado se almacena
                      00137 ; en 32 bits. La operación se realizan sin signo.
                      00138 ;
                      00139 ; El algoritmo utilizado es similar al de la multiplicación de 8 bits.
                      00140 ;
                      00141 ; Previo a la llamada de esta subrutinas los números a multiplicar se almacenan en los registros
                      00142 ; (Arit_Multiplicando_H, Arit_Multiplicando_L) y (Arit_Multiplicador_H, Arit_Multiplicador_L).
                      00143 ; El resultado en 32 bits se proporciona en los registros 
                      00144 ; (Arit_Producto_2H, Arit_Producto_2L, Arit_Producto_1H, Arit_Producto_1L).
                      00145 ;
                      00146 ; Se utilizan posiciones de memoria definidas anteriormente, a las que se les cambia el nombre 
                      00147 ; por motivos puramente pedagógicos:
                      00148 
                      00149 ;Arit_Multiplicando_H   EQU     Arit_Operando_1H
                      00150 ;Arit_Multiplicando_L   EQU     Arit_Operando_1L
                      00151 ;Arit_Multiplicador_H   EQU     Arit_Operando_2H
                      00152 ;Arit_Multiplicador_L   EQU     Arit_Operando_2L
                      00153 ;Arit_Producto_1H               EQU     Arit_Resultado_1H
                      00154 ;Arit_Producto_1L               EQU     Arit_Resultado_1L
                      00155 ;Arit_Producto_2H               EQU     Arit_Resultado_2H
                      00156 ;Arit_Producto_2L               EQU     Arit_Resultado_2L
                      00157 
00D7                  00158 Arit_Multiplica_16Bit
00D7   01C6           00159         clrf    Arit_Producto_1H                ; En principio el resultado es cero.
00D8   01C7           00160         clrf    Arit_Producto_1L
00D9   01C8           00161         clrf    Arit_Producto_2H
00DA   01C9           00162         clrf    Arit_Producto_2L
00DB   3010           00163         movlw   .16                                             ; Carga el contador de 16 bits.
00DC   00BB           00164         movwf   Arit_ContadorBits
00DD                  00165 Arit_Multiplica16Bit
00DD   0CB6           00166         rrf             Arit_Multiplicador_H,F  ; Va a comprobar el siguiente bit del multiplicador.
00DE   0CB8           00167         rrf             Arit_Multiplicador_L,F
00DF   1C03           00168         btfss   STATUS,C
00E0   28E7           00169         goto    Arit_Multiplicador_BitCero
00E1   0837           00170         movf    Arit_Multiplicando_L,W  ; Suma en 16 bits el resultado parcial y
00E2   07C9           00171         addwf   Arit_Producto_2L,F              ; y el multiplicando.
00E3   1803           00172         btfsc   STATUS,C
00E4   0AC8           00173         incf    Arit_Producto_2H,F
00E5   0835           00174         movf    Arit_Multiplicando_H,W
00E6   07C8           00175         addwf   Arit_Producto_2H,F
00E7                  00176 Arit_Multiplicador_BitCero
00E7   0CC8           00177         rrf             Arit_Producto_2H,F              ; Desplaza el resultado parcial un lugar hacia l
                            a 
00E8   0CC9           00178         rrf             Arit_Producto_2L,F              ; derecha, introduciendo un "0" por la izquierda
                            .
00E9   0CC6           00179         rrf             Arit_Producto_1H,F
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00EA   0CC7           00180         rrf             Arit_Producto_1L,F
00EB   0BBB           00181         decfsz  Arit_ContadorBits,F             ; ¿Ha multiplicado los 16 bits?
00EC   28DD           00182         goto    Arit_Multiplica16Bit    ; Repite la operación.
00ED   0008           00183         return
                      00184 
                      00185 
                      00186 
                      00187 ; Subrutinas "Arit_Divide_16Bit" --------------------------------------------------------
                      00188 ;
                      00189 ; Realiza la división del contenido del dividendo de 16 bits entre un divisor de 7 bits.
                      00190 ; El máximo valor del divisor serE127.
                      00191 ;
                      00192 ; Se utiliza el mismo algoritmo explicado para la subrutina Arit_Divide_8bit.
                      00193 ;
                      00194 ; Entradas:
                      00195 ;       - (Arit_Dividendo_H) y (Arit_Dividendo_L) que hacen de dividendo de 16 bits.
                      00196 ;       - (Arit_Divisor) que es el divisor de 7 bits, (máximo b'01111111'=0x7F=d'127').
                      00197 ; Salidas:
                      00198 ;       - (Arit_Cociente_H) y (Arit_Cociente_L) que hacen de cociente de 16 bits.
                      00199 ;       - (Resto) de 8 bits.
                      00200 ;       - (W), en el registro de trabajo también el resto.
                      00201 ;
                      00202 ; La división se harEsin signo y el programa que le llame deberEdetectar que el divisor no
                      00203 ; es cero. El divisor serEde 7 bits, es decir su valor máximo serE
                      00204 ; b'01111111'=0x7F=d'127'.
                      00205 ;
                      00206 ; Se utilizan posiciones de memoria definidas anteriormente, a las que se les cambia el nombre 
                      00207 ; por motivos puramente pedagógicos:
                      00208 ;
                      00209 
                      00210 
00EE                  00211 Arit_Divide_16Bit
00EE   01BE           00212         clrf    Arit_Cociente_H                 ; En principio el resultado es cero.
00EF   01BF           00213         clrf    Arit_Cociente_L
00F0   01C0           00214         clrf    Arit_Resto
00F1   3010           00215         movlw   .16                                             ; Carga el contador.
00F2   00BB           00216         movwf   Arit_ContadorBits
00F3                  00217 Arit_DivideBit16
00F3   0DBD           00218         rlf             Arit_Dividendo_L,F
00F4   0DBC           00219         rlf             Arit_Dividendo_H,F
00F5   0DC0           00220         rlf             Arit_Resto,F                    ; (Arit_Resto) contiene el dividendo parcial.
00F6   0841           00221         movf    Arit_Divisor,W
00F7   0240           00222         subwf   Arit_Resto,W                    ; Compara dividendo parcial y divisor.
00F8   1803           00223         btfsc   STATUS,C                                ; Si (dividendo parcial)>(divisor)
00F9   00C0           00224         movwf   Arit_Resto                              ; (dividendo parcial) - (divisor) --> (dividendo
                             parcial)
00FA   0DBF           00225         rlf             Arit_Cociente_L,F               ; Desplaza el cociente introduciendo el bit apro
                            piado
00FB   0DBE           00226         rlf             Arit_Cociente_H,F               ; "0" E"1" según corresponda.
00FC   0BBB           00227         decfsz  Arit_ContadorBits,F
00FD   28F3           00228         goto    Arit_DivideBit16
00FE   0840           00229         movf    Arit_Resto,W                    ; El resto también en (W).
00FF   0008           00230         return
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00231         
                      00280         INCLUDE <BIN_BCD.INC>                   ;Para mandar constantes al LCD, debemos convertir a BCD
                      00001 ;******************************** Librería "BIN_BCD.INC" ********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.            www.pic16f84a.com
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Un número binario natural de 8 bits es convertido a BCD. El resultado se guarda en tres
                      00010 ; posiciones de memorias llamadas: BCD_Centenas, BCD_Decenas y BCD_Unidades.
                      00011 ;
                      00012 ; El procedimiento utilizado es mediante restas de 10, tal como se explicó en el capítulo 9.
                      00013 ;
                      00014 ; Entrada:      En el registro W el número binario natural a convertir.
                      00015 ; Salidas:      En (BCD_Centenas), (BCD_Decenas) y (BCD_Unidades).
                      00016 ;                       En el registro W también las decenas (nibble alto) y unidades (nibble bajo).
                      00017 
                      00018 ; Subrutina "BIN_a_BCD" -----------------------------------------------------------------
                      00019 
                      00020         CBLOCK                                          ; En las subrutinas no se debe fijar la direcció
                            n
  0000004A            00021         BCD_Centenas                            ; de la RAM de usuario. Se toma a continuación de
  0000004B            00022         BCD_Decenas                                     ; la última asignada.
  0000004C            00023         BCD_Unidades    
                      00024         ENDC
                      00025 ;
0100                  00026 BIN_a_BCD
0100   01CA           00027         clrf    BCD_Centenas            ; Carga los registros con el resultado inicial.
0101   01CB           00028         clrf    BCD_Decenas                     ; En principio las centenas y decenas a cero.
0102   00CC           00029         movwf   BCD_Unidades            ; Se carga el número binario a convertir.
0103                  00030 BCD_Resta10
0103   300A           00031         movlw   .10                                     ; A las unidades se les va restando 10 en cada
0104   024C           00032         subwf   BCD_Unidades,W          ; pasada. (W)=(BCD_Unidades) -10.
0105   1C03           00033         btfss   STATUS,C                        ; ¿C = 1?, ¿(W) positivo?, ¿(BCD_Unidades)>=10?
0106   2910           00034         goto    BIN_BCD_Fin                     ; No, es menor de 10. Se acabó.
0107                  00035 BCD_IncrementaDecenas
0107   00CC           00036         movwf   BCD_Unidades            ; Recupera lo que queda por restar.
0108   0ACB           00037         incf    BCD_Decenas,F           ; Incrementa las decenas y comprueba si ha llegado
0109   300A           00038         movlw   .10                                     ; a 10. Lo hace mediante una resta.
010A   024B           00039         subwf   BCD_Decenas,W           ; (W)=(BCD_Decenas)-10).
010B   1C03           00040         btfss   STATUS,C                        ; ¿C = 1?, ¿(W) positivo?, ¿(BCD_Decenas)>=10?
010C   2903           00041         goto    BCD_Resta10                     ; No. Vuelve a dar otra pasada, restándole 10 a
010D                  00042 BCD_IncrementaCentenas                  ; las unidades.
010D   01CB           00043         clrf    BCD_Decenas                     ; Pone a cero las decenas 
010E   0ACA           00044         incf    BCD_Centenas,F          ; e incrementa las centenas.
010F   2903           00045         goto    BCD_Resta10                     ; Otra pasada: Resta 10 al número a convertir.
0110                  00046 BIN_BCD_Fin
0110   0E4B           00047         swapf   BCD_Decenas,W           ; En el nibble alto de (W) también las decenas.
0111   074C           00048         addwf   BCD_Unidades,W          ; En el nibble bajo de (W) las unidades.
0112   0008           00049         return                                          ; Vuelve al programa principal.
                      00050         
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00051 ; La directiva "END" se debe poner en el programa principal no aquí.
                      00052 
                      00053 ;       ===================================================================
                      00054 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
                      00055 ;         E. Palacios, F. Remiro y L. López.            www.pic16f84a.com
                      00056 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00057 ;       ===================================================================
                      00281         INCLUDE <LCD_MENS.INC>                  
                      00001 ;**************************** Librería "LCD_MENS.INC" ********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. López.            www.pic16f84a.com
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; Librería de subrutinas para el manejo de mensajes a visualizar en un visualizador LCD.
                      00010 
                      00011         CBLOCK
  0000004D            00012         LCD_ApuntaCaracter                              ; Indica la posición del carácter a visualizar
                      00013                                                                         ; respecto del comienzo de todos
                             los mensajes,
                      00014                                                                         ; (posición de la etiqueta "Mens
                            ajes").
  0000004E            00015         LCD_ValorCaracter                               ; Código ASCII del carácter a 
                      00016         ENDC                                                    ; visualizar.
                      00017 
                      00018 ; Los mensajes tienen que estar situados dentro de las 256 primeras posiciones de la 
                      00019 ; memoria de programa, es decir, no pueden superar la dirección 0FFh.
                      00020 
                      00021 ; Subrutina "LCD_Mensaje" ---------------------------------------------------------------
                      00022 ;
                      00023 ; Visualiza por pantalla el mensaje apuntado por el registro W.
                      00024 ;
                      00025 ; Los mensajes deben localizarse dentro de una zona encabezada por la etiqueta "Mensajes" y que
                      00026 ; tenga la siguiente estructura:
                      00027 ;
                      00028 ; Mensajes                                                      ; ¡Etiqueta obligatoria!
                      00029 ;       addwf   PCL,F
                      00030 ; Mensaje0                                                      ; Posición inicial del mensaje.
                      00031 ;       DT ".. ..", 0x00                                ; Mensaje terminado en 0x00.
                      00032 ; Mensaje1
                      00033 ;       ...     
                      00034 ;       ...
                      00035 ; FinMensajes
                      00036 ;
                      00037 ; La llamada a esta subrutina se realizará siguiendo este ejemplo:
                      00038 ;
                      00039 ;       movlw   Mensaje0                                ; Carga la posición del mensaje.
                      00040 ;       call    LCD_Mensaje                             ; Visualiza el mensaje.
                      00041 ;
0113                  00042 LCD_Mensaje
0113   00CD           00043         movwf   LCD_ApuntaCaracter              ; Posición del primer carácter del mensaje.
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0114   308F           00044         movlw   Mensajes                                ; Halla la posición relativa del primer carácter
0115   02CD           00045         subwf   LCD_ApuntaCaracter,F    ; del mensaje respecto de etiqueta "Mensajes".
0116   03CD           00046         decf    LCD_ApuntaCaracter,F    ; Compensa la posición que ocupa "addwf PCL,F".
0117                  00047 LCD_VisualizaOtroCaracter
0117   084D           00048         movf    LCD_ApuntaCaracter,W
0118   208F           00049         call    Mensajes                                ; Obtiene el código ASCII del carácter apuntado.
0119   00CE           00050         movwf   LCD_ValorCaracter               ; Guarda el valor de carácter.
011A   08CE           00051         movf    LCD_ValorCaracter,F             ; Lo único que hace es posicionar flag Z. En caso
011B   1903           00052         btfsc   STATUS,Z                                ; que sea "0x00", que es código indicador final 
011C   2920           00053         goto    LCD_FinMensaje                  ; de mensaje, sale fuera.
011D                  00054 LCD_NoUltimoCaracter
011D   2184           00055         call    LCD_Caracter                    ; Visualiza el carácter ASCII leído.
011E   0ACD           00056         incf    LCD_ApuntaCaracter,F    ; Apunta a la posición del siguiente carácter 
011F   2917           00057         goto    LCD_VisualizaOtroCaracter       ; dentro del mensaje.
0120                  00058 LCD_FinMensaje
0120   0008           00059         return                                                  ; Vuelve al programa principal.
                      00060 
                      00061 ; Subrutina "LCD_MensajeMovimiento" -----------------------------------------------------
                      00062 ;
                      00063 ; Visualiza un mensaje de mayor longitud que los 16 caracteres que pueden representarse
                      00064 ; en una línea, por tanto se desplaza a través de la pantalla.
                      00065 ;
                      00066 ; En el mensaje debe dejarse 16 espacios en blanco, al principio y al final para
                      00067 ; conseguir que el desplazamiento del mensaje sea lo más legible posible.
                      00068 ;
                      00069         CBLOCK  
  0000004F            00070         LCD_CursorPosicion                              ; Contabiliza la posición del cursor dentro de l
                            a
                      00071         ENDC                                                    ; pantalla LCD
                      00072 
0121                  00073 LCD_MensajeMovimiento
0121   00CD           00074         movwf   LCD_ApuntaCaracter              ; Posición del primer carácter del mensaje.
0122   308F           00075         movlw   Mensajes                                ; Halla la posición relativa del primer carácter
0123   02CD           00076         subwf   LCD_ApuntaCaracter,F    ; del mensaje respecto de la etiqueta "Mensajes".
0124   03CD           00077         decf    LCD_ApuntaCaracter,F    ; Compensa la posición que ocupa "addwf PCL,F".
0125                  00078 LCD_PrimeraPosicion
0125   01CF           00079         clrf    LCD_CursorPosicion              ; El cursor en la posición 0 de la línea.
0126   217F           00080         call    LCD_Borra                               ; Se sitúa en la primera posición de la línea 1 
                            y
0127                  00081 LCD_VisualizaCaracter                           ; borra la pantalla.
0127   3010           00082         movlw   LCD_CaracteresPorLinea  ; ¿Ha llegado a final de línea?
0128   024F           00083         subwf   LCD_CursorPosicion,W
0129   1D03           00084         btfss   STATUS,Z
012A   2930           00085         goto    LCD_NoEsFinalLinea
012B                  00086 LCD_EsFinalLinea
012B   21DF           00087         call    Retardo_200ms                   ; Lo mantiene visualizado durante este tiempo.
012C   21DF           00088         call    Retardo_200ms
012D   300F           00089         movlw   LCD_CaracteresPorLinea-1; Apunta a la posición del segundo carácter visualizado
012E   02CD           00090         subwf   LCD_ApuntaCaracter,F    ; en pantalla, que será el primero en la siguiente
012F   2925           00091         goto    LCD_PrimeraPosicion             ; visualización de línea, para producir el efecto
0130                  00092 LCD_NoEsFinalLinea                                      ; de desplazamiento hacia la izquierda.
0130   084D           00093         movf    LCD_ApuntaCaracter,W
0131   208F           00094         call    Mensajes                                ; Obtiene el ASCII del carácter apuntado.
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0132   00CE           00095         movwf   LCD_ValorCaracter               ; Guarda el valor de carácter.
0133   08CE           00096         movf    LCD_ValorCaracter,F             ; Lo único que hace es posicionar flag Z. En caso
0134   1903           00097         btfsc   STATUS,Z                                ; que sea "0x00", que es código indicador final 
0135   293A           00098         goto    LCD_FinMovimiento               ; de mensaje, sale fuera.
0136                  00099 LCD_NoUltimoCaracter2
0136   2184           00100         call    LCD_Caracter                    ; Visualiza el carácter ASCII leído.
0137   0ACF           00101         incf    LCD_CursorPosicion,F    ; Contabiliza el incremento de posición del 
                      00102                                                                         ; cursor en la pantalla.
0138   0ACD           00103         incf    LCD_ApuntaCaracter,F    ; Apunta a la siguiente posición por visualizar.
0139   2927           00104         goto    LCD_VisualizaCaracter   ; Vuelve a visualizar el siguiente carácter
013A                  00105 LCD_FinMovimiento                                       ; de la línea.
013A   0008           00106         return                                                  ; Vuelve al programa principal.
                      00107         
                      00108 ;       ===================================================================
                      00109 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
                      00110 ;         E. Palacios, F. Remiro y L. López.            www.pic16f84a.com
                      00111 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00112 ;       ===================================================================     
                      00113         
                      00282         INCLUDE <LCD_4BIT_16F877_D_E.INC>
                      00001 ; Estas subrutinas permiten realizar las tareas básicas de control de un módulo LCD de 2
                      00002 ; líneas por 16 caracteres, compatible con el modelo LM016L.
                      00003 ;
                      00004 ; El visualizador LCD está conectado al Puerto B del PIC mediante un bus de 4 bits. Las
                      00005 ; conexiones son:
                      00006 ;    -  Las 4 líneas superiores del módulo LCD, pines <DB7:DB4>  se conectan a las 4
                      00007 ;       líneas superiores del Puerto B del PIC, pines <RB7:RB4>.
                      00008 ;    -  Pin RS del LCD a la línea RA0 del PIC.
                      00009 ;    -  Pin R/W del LCD a la línea RA1 del PIC, o a masa.
                      00010 ;    -  Pin Enable del LCD a la línea RA2 del PIC.
                      00011 ;
                      00012 ; Se utilizan llamadas a subrutinas de retardo de tiempo localizadas en la librería RETARDOS.INC.
                      00013 ;
                      00014 ; ZONA DE DATOS *********************************************************************
                      00015 
                      00016         CBLOCK
  00000050            00017         LCD_Dato
  00000051            00018         LCD_GuardaDato
  00000052            00019         LCD_GuardaTRISD
  00000053            00020         LCD_Auxiliar1
  00000054            00021         LCD_Auxiliar2
                      00022         ENDC
                      00023 
  00000010            00024 LCD_CaracteresPorLinea  EQU     .16     ; Número de caracteres por línea de la pantalla.
                      00025 
                      00026 #DEFINE  LCD_PinRS      PORTE,0
                      00027 #DEFINE  LCD_PinRW      PORTE,1
                      00028 #DEFINE  LCD_PinEnable  PORTE,2
                      00029 #DEFINE  LCD_BusDatos   PORTD
                      00030 
                      00031 ; Subrutina "LCD_Inicializa" ------------------------------------------------------------
                      00032 ;
                      00033 ; Inicialización del módulo LCD: Configura funciones del LCD, produce reset por software,
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00034 ; borra memoria y enciende pantalla. El fabricante especifica que para garantizar la
                      00035 ; configuración inicial hay que hacerla como sigue:
                      00036 ;
013B                  00037 LCD_Inicializa
013B   1683           00038         bsf     STATUS,RP0              ; Configura las líneas conectadas al pines RS,
013C   1009           00039         bcf     LCD_PinRS               ; R/W y E.
013D   1109           00040         bcf     LCD_PinEnable
013E   1089           00041         bcf     LCD_PinRW
013F   3005           00042         movlw .5                        ; Configura todos los pines del puerto E como digitales
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0140   009F           00043         movwf ADCON1
0141   1283           00044         bcf     STATUS,RP0
0142   1089           00045         bcf     LCD_PinRW               ; En caso de que esté conectado le indica
                      00046                                         ; que se va a escribir en el LCD.
0143   1109           00047         bcf     LCD_PinEnable           ; Impide funcionamiento del LCD poniendo E=0.
0144   1009           00048         bcf     LCD_PinRS               ; Activa el Modo Comando poniendo RS=0.
0145   21E5           00049         call    Retardo_20ms
0146   3030           00050         movlw   b'00110000'     
0147   2155           00051         call    LCD_EscribeLCD          ; Escribe el dato en el LCD.
0148   21E9           00052         call    Retardo_5ms     
0149   3030           00053         movlw   b'00110000'     
014A   2155           00054         call    LCD_EscribeLCD
014B   21D2           00055         call    Retardo_200micros
014C   3030           00056         movlw   b'00110000'     
014D   2155           00057         call    LCD_EscribeLCD
014E   3020           00058         movlw   b'00100000'             ; Interface de 4 bits.
014F   2155           00059         call    LCD_EscribeLCD
                      00060 
                      00061 ; Ahora configura el resto de los parámetros: 
                      00062 
0150   2181           00063         call    LCD_2Lineas4Bits5x7     ; LCD de 2 líneas y caracteres de 5x7 puntos.
0151   217F           00064         call    LCD_Borra               ; Pantalla encendida y limpia. Cursor al principio
0152   217D           00065         call    LCD_CursorOFF           ; de la línea 1. Cursor apagado.
0153   216B           00066         call    LCD_CursorIncr          ; Cursor en modo incrementar.
0154   0008           00067         return
                      00068 
                      00069 ; Subrutina "LCD_EscribeLCD" -----------------------------------------------------------
                      00070 ;
                      00071 ; Envía el dato del registro de trabajo W al bus de dato y produce un pequeño pulso en el pin
                      00072 ; Enable del LCD. Para no alterar el contenido de las líneas de la parte baja del Puerto B que
                      00073 ; no son utilizadas para el LCD (pines RB3:RB0), primero se lee estas líneas y después se
                      00074 ; vuelve a enviar este dato sin cambiarlo.
                      00075 
0155                  00076 LCD_EscribeLCD
0155   39F0           00077         andlw   b'11110000'             ; Se queda con el nibble alto del dato que es el
0156   00D0           00078         movwf   LCD_Dato                ; que hay que enviar y lo guarda.
0157   0808           00079         movf    LCD_BusDatos,W          ; Lee la información actual de la parte baja
0158   390F           00080         andlw   b'00001111'             ; del Puerto B, que no se debe alterar.
0159   04D0           00081         iorwf   LCD_Dato,F              ; Enviará la parte alta del dato de entrada
                      00082                                         ; y en la parte baja lo que había antes.
015A   1683           00083         bsf     STATUS,RP0              ; Acceso al Banco 1.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
015B   0808           00084         movf    TRISD,W                 ; Guarda la configuración que tenía antes TRISD.
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

015C   00D2           00085         movwf   LCD_GuardaTRISD
015D   300F           00086         movlw   b'00001111'             ; Las 4 líneas inferiores del Puerto B se dejan 
015E   0588           00087         andwf   PORTD,F                 ; como estaban y las 4 superiores como salida.
015F   1283           00088         bcf     STATUS,RP0              ; Acceso al Banco 0.
0160   1509           00089         BSF     PORTE, 0x02
0161   0850           00090         movf    LCD_Dato,W              ; Recupera el dato a enviar.
0162   0088           00091         movwf   LCD_BusDatos            ; Envía el dato al módulo LCD.
0163   0000           00092         NOP                             ; Permite funcionamiento del LCD mediante un pequeño
0164   1109           00093         bcf     LCD_PinEnable           ; pulso y termina impidiendo el funcionamiento del LCD.
0165   1683           00094         bsf     STATUS,RP0              ; Acceso al Banco 1. Restaura el antiguo valor en
0166   0852           00095         movf    LCD_GuardaTRISD,W       ; la configuración del Puerto B.
0167   0088           00096         movwf   PORTD                   ; Realmente es TRISD.
0168   1283           00097         bcf     STATUS,RP0              ; Acceso al Banco 0.
0169   21EB           00098         CALL    Retardo_2ms
016A   0008           00099         return
                      00100 
                      00101 ; Subrutinas variadas para el control del módulo LCD -----------------------------------------
                      00102 ;
                      00103 ;Los comandos que pueden ser ejecutados son:
                      00104 ;
016B                  00105 LCD_CursorIncr                          ; Cursor en modo incrementar.
016B   3006           00106         movlw   b'00000110'
016C   2982           00107         goto    LCD_EnviaComando
016D                  00108 LCD_Linea1                              ; Cursor al principio de la Línea 1.
016D   3080           00109         movlw   b'10000000'             ; Dirección 00h de la DDRAM
016E   2982           00110         goto    LCD_EnviaComando
016F                  00111 LCD_Linea2                              ; Cursor al principio de la Línea 2.
016F   30C0           00112         movlw   b'11000000'             ; Dirección 40h de la DDRAM
0170   2982           00113         goto    LCD_EnviaComando
0171   3094           00114         MOVLW   0x94
0172   2982           00115         GOTO    LCD_EnviaComando
0173   30D4           00116         MOVLW   0xD4
0174   2982           00117         GOTO    LCD_EnviaComando
0175                  00118 LCD_PosicionLinea1                      ; Cursor a posición de la Línea 1, a partir de la
0175   3880           00119         iorlw   b'10000000'             ; dirección 00h de la DDRAM más el valor del
0176   2982           00120         goto    LCD_EnviaComando        ; registro W.
0177                  00121 LCD_PosicionLinea2                      ; Cursor a posición de la Línea 2, a partir de la
0177   38C0           00122         iorlw   b'11000000'             ; dirección 40h de la DDRAM más el valor del
0178   2982           00123         goto    LCD_EnviaComando        ; registro W.
0179                  00124 LCD_OFF                         ; Pantalla apagada.
0179   3008           00125         movlw   b'00001000'
017A   2982           00126         goto    LCD_EnviaComando
017B                  00127 LCD_CursorON                            ; Pantalla encendida y cursor encendido.
017B   300E           00128         movlw   b'00001110'
017C   2982           00129         goto    LCD_EnviaComando
017D                  00130 LCD_CursorOFF                           ; Pantalla encendida y cursor apagado.
017D   300C           00131         movlw   b'00001100'
017E   2982           00132         goto    LCD_EnviaComando
017F                  00133 LCD_Borra                               ; Borra toda la pantalla, memoria DDRAM y pone el 
017F   3001           00134         movlw   b'00000001'             ; cursor a principio de la línea 1.
0180   2982           00135         goto    LCD_EnviaComando
0181                  00136 LCD_2Lineas4Bits5x7                     ; Define la pantalla de 2 líneas, con caracteres
0181   3028           00137         movlw   b'00101000'             ; de 5x7 puntos y conexión al PIC mediante bus de
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00138 ;                                       ; 4 bits. 
                      00139 
                      00140 ; Subrutinas "LCD_EnviaComando" y "LCD_Caracter" ------------------------------------
                      00141 ;
                      00142 ; "LCD_EnviaComando". Escribe un comando en el registro del módulo LCD. La palabra de
                      00143 ; comando ha sido entregada a través del registro W.  Trabaja en Modo Comando.
                      00144 ; "LCD_Caracter". Escribe en la memoria DDRAM del LCD el carácter ASCII introducido a
                      00145 ; a través del registro W. Trabaja en Modo Dato.
                      00146 ;
0182                  00147 LCD_EnviaComando
0182   1009           00148         bcf     LCD_PinRS               ; Activa el Modo Comando, poniendo RS=0.
0183   2986           00149         goto    LCD_Envia
0184                  00150 LCD_Caracter
0184   1409           00151         bsf     LCD_PinRS               ; Activa el "Modo Dato", poniendo RS=1.
0185   218E           00152         call    LCD_CodigoCGROM ; Obtiene el código para correcta visualización.
0186                  00153 LCD_Envia
0186   00D1           00154         movwf   LCD_GuardaDato          ; Guarda el dato a enviar.
0187   2155           00155         call    LCD_EscribeLCD          ; Primero envía el nibble alto.
0188   0E51           00156         swapf   LCD_GuardaDato,W        ; Ahora envía el nibble bajo. Para ello pasa el
                      00157                                         ; nibble bajo del dato a enviar a parte alta del byte.
0189   2155           00158         call    LCD_EscribeLCD          ; Se envía al visualizador LCD.
018A   1C09           00159         btfss   LCD_PinRS               ; Debe garantizar una correcta escritura manteniendo 
018B   21EB           00160         call    Retardo_2ms             ; 2 ms en modo comando y 50 µs en modo cáracter.
018C   21D7           00161         call    Retardo_50micros
018D   0008           00162         return  
                      00163 
                      00164 ; Subrutina "LCD_CodigoCGROM" -----------------------------------------------------------
                      00165 ;
                      00166 ; A partir del carácter ASCII número 127 los códigos de los caracteres definidos en la
                      00167 ; tabla CGROM del LM016L no coinciden con los códigos ASCII. Así por ejemplo, el código
                      00168 ; ASCII de la "Ñ" en la tabla CGRAM del LM016L es EEh.
                      00169 ;
                      00170 ; Esta subrutina convierte los códigos ASCII de la "Ñ", "º" y otros, a códigos CGROM para que
                      00171 ; que puedan ser visualizado en el módulo LM016L.
                      00172 ; 
                      00173 ; Entrada:      En (W) el código ASCII del carácter que se desea visualizar.
                      00174 ; Salida:       En (W) el código definido en la tabla CGROM.
                      00175 
018E                  00176 LCD_CodigoCGROM
018E   00D0           00177         movwf   LCD_Dato                ; Guarda el valor del carácter y comprueba si es
018F                  00178 LCD_EnheMinuscula                       ; un carácter especial.
018F   3CF1           00179         sublw   'ñ'                     ; ¿Es la "ñ"?
0190   1D03           00180         btfss   STATUS,Z
0191   2995           00181         goto    LCD_EnheMayuscula       ; No es "ñ".
0192   30EE           00182         movlw   b'11101110'             ; Código CGROM de la "ñ".
0193   00D0           00183         movwf   LCD_Dato
0194   29A2           00184         goto    LCD_FinCGROM
0195                  00185 LCD_EnheMayuscula
0195   0850           00186         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
0196   3CD1           00187         sublw   'Ñ'                     ; ¿Es la "Ñ"?
0197   1D03           00188         btfss   STATUS,Z
0198   299C           00189         goto    LCD_Grado               ; No es "Ñ".
0199   30EE           00190         movlw   b'11101110'             ; Código CGROM de la "ñ". (No hay símbolo para
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

019A   00D0           00191         movwf   LCD_Dato                ; la "Ñ" mayúscula en la CGROM).
019B   29A2           00192         goto    LCD_FinCGROM    
019C                  00193 LCD_Grado
019C   0850           00194         movf    LCD_Dato,W              ; Recupera el código ASCII de entrada.
019D   3CBA           00195         sublw   'º'                     ; ¿Es el símbolo "º"?
019E   1D03           00196         btfss   STATUS,Z
019F   29A2           00197         goto    LCD_FinCGROM            ; No es "º".
01A0   30DF           00198         movlw   b'11011111'             ; Código CGROM del símbolo "º".
01A1   00D0           00199         movwf   LCD_Dato
01A2                  00200 LCD_FinCGROM
01A2   0850           00201         movf    LCD_Dato,W              ; En (W) el código buscado.
01A3   0008           00202         return
                      00203 
                      00204 ; Subrutina "LCD_DosEspaciosBlancos" y "LCD_LineaBlanco" --------------------------------
                      00205 ;
                      00206 ; Visualiza espacios en blanco.
                      00207 
01A4                  00208 LCD_LineaEnBlanco
01A4   3010           00209         movlw   LCD_CaracteresPorLinea
01A5   29AB           00210         goto    LCD_EnviaBlancos
01A6                  00211 LCD_UnEspacioBlanco
01A6   3001           00212         movlw   .1
01A7   29AB           00213         goto    LCD_EnviaBlancos
01A8                  00214 LCD_DosEspaciosBlancos
01A8   3002           00215         movlw   .2
01A9   29AB           00216         goto    LCD_EnviaBlancos
01AA                  00217 LCD_TresEspaciosBlancos
01AA   3003           00218         movlw   .3
01AB                  00219 LCD_EnviaBlancos
01AB   00D3           00220         movwf   LCD_Auxiliar1           ; (LCD_Auxiliar1) se utiliza como contador.
01AC                  00221 LCD_EnviaOtroBlanco     
01AC   3020           00222         movlw   ' '                     ; Esto es un espacio en blanco.
01AD   2184           00223         call    LCD_Caracter            ; Visualiza tanto espacios en blanco como se
01AE   0BD3           00224         decfsz  LCD_Auxiliar1,F         ; haya cargado en (LCD_Auxiliar1).
01AF   29AC           00225         goto    LCD_EnviaOtroBlanco
01B0   0008           00226         return
                      00227 
                      00228 ; Subrutinas "LCD_ByteCompleto" y "LCD_Byte" --------------------------------------------
                      00229 ;
                      00230 ; Subrutina "LCD_ByteCompleto", visualiza el byte que almacena el registro W en el
                      00231 ; lugar actual de la pantalla. Por ejemplo, si (W)=b'10101110' visualiza "AE".
                      00232 ;
                      00233 ; Subrutina "LCD_Byte" igual que la anterior, pero en caso de que el nibble alto sea cero 
                      00234 ; visualiza en su lugar un espacio en blanco. Por ejemplo si (W)=b'10101110' visualiza "AE"
                      00235 ; y si (W)=b'00001110', visualiza " E" (un espacio blanco delante).
                      00236 ;
                      00237 ; Utilizan la subrutina "LCD_Nibble" que se analiza más adelante.
                      00238 ;
01B1                  00239 LCD_Byte
01B1   00D4           00240         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
01B2   39F0           00241         andlw   b'11110000'             ; Analiza si el nibble alto es cero.
01B3   1D03           00242         btfss   STATUS,Z                ; Si es cero lo apaga.
01B4   29B9           00243         goto    LCD_VisualizaAlto               ; No es cero y lo visualiza.
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01B5   3020           00244         movlw   0x20                    ; Visualiza un espacio en blanco.
01B6   2184           00245         call    LCD_Caracter
01B7   29BB           00246         goto    LCD_VisualizaBajo
                      00247 
01B8                  00248 LCD_ByteCompleto
01B8   00D4           00249         movwf   LCD_Auxiliar2           ; Guarda el valor de entrada.
01B9                  00250 LCD_VisualizaAlto
01B9   0E54           00251         swapf   LCD_Auxiliar2,W         ; Pone el nibble alto en la parte baja.
01BA   21BC           00252         call    LCD_Nibble              ; Lo visualiza.
01BB                  00253 LCD_VisualizaBajo
01BB   0854           00254         movf    LCD_Auxiliar2,W         ; Repite el proceso con el nibble bajo.
                      00255 ;       call    LCD_Nibble              ; Lo visualiza.
                      00256 ;       return
                      00257 
                      00258 ; Subrutina "LCD_Nibble" ----------------------------------------------------------------
                      00259 ;
                      00260 ; Visualiza en el lugar actual de la pantalla, el valor hexadecimal que almacena en el nibble
                      00261 ; bajo del registro W. El nibble alto de W no es tenido en cuenta. Ejemplos:
                      00262 ; - Si (W)=b'01010110', se visualizará "6". 
                      00263 ; - Si (W)=b'10101110', se visualizará "E". 
                      00264 ;
01BC                  00265 LCD_Nibble
01BC   390F           00266         andlw   b'00001111'             ; Se queda con la parte baja.
01BD   00D3           00267         movwf   LCD_Auxiliar1           ; Lo guarda.
01BE   3C09           00268         sublw   0x09                    ; Comprueba si hay que representarlo con letra.
01BF   1C03           00269         btfss   STATUS,C        
01C0   29C4           00270         goto    LCD_EnviaByteLetra
01C1   0853           00271         movf    LCD_Auxiliar1,W
01C2   3E30           00272         addlw   0X30    ; ' '           ; El número se pasa a carácter ASCII sumándole
01C3   29C6           00273         goto    LCD_FinVisualizaDigito  ; el ASCII del cero y lo visualiza.
01C4                  00274 LCD_EnviaByteLetra
01C4   0853           00275         movf    LCD_Auxiliar1,W
01C5   3E37           00276         addlw   0x37    ;'a'            ; Sí, por tanto, se le suma el ASCII de la 'A'.
01C6                  00277 LCD_FinVisualizaDigito
01C6   2984           00278         goto    LCD_Caracter            ; Y visualiza el carácter. Se hace con un "goto"
                      00279                                         ; para no sobrecargar la pila.
                      00280                                         
                      00281 ;       ===================================================================
                      00282 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
                      00283 ;         E. Palacios, F. Remiro y L. López.
                      00284 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00285 ;       ===================================================================
                      00283         INCLUDE <RETARDOS.INC> 
                      00001 ;**************************** LibrerÃ­a "RETARDOS.INC" *********************************
                      00002 ;
                      00003 ;       ===================================================================
                      00004 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
                      00005 ;         E. Palacios, F. Remiro y L. LÃ³pez.
                      00006 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00007 ;       ===================================================================
                      00008 ;
                      00009 ; LibrerÃ­a con mÃºltiples subrutinas de retardos, desde 4 microsegundos hasta 20 segundos. 
                      00010 ; AdemÃ¡s se pueden implementar otras subrutinas muy fÃ¡cilmente.
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00011 ;
                      00012 ; Se han calculado para un sistema microcontrolador con un PIC trabajando con un cristal
                      00013 ; de cuarzo a 4 MHz. Como cada ciclo mÃ¡quina son 4 ciclos de reloj, resulta que cada
                      00014 ; ciclo mÃ¡quina tarda 4 x 1/4MHz = 1 Âµs.
                      00015 ;
                      00016 ; En los comentarios, "cm" significa "ciclos mÃ¡quina".
                      00017 ;
                      00018 ; ZONA DE DATOS *********************************************************************
                      00019 
                      00020         CBLOCK
  00000055            00021         R_ContA                         ; Contadores para los retardos.
  00000056            00022         R_ContB
  00000057            00023         R_ContC
                      00024         ENDC
                      00025 ;
                      00026 ; RETARDOS de 4 hasta 10 microsegundos ---------------------------------------------------
                      00027 ;
                      00028 ; A continuaciÃ³n retardos pequeÃ±os teniendo en cuenta que para una frecuencia de 4 MHZ,
                      00029 ; la llamada a subrutina "call" tarda 2 ciclos mÃ¡quina, el retorno de subrutina
                      00030 ; "return" toma otros 2 ciclos mÃ¡quina y cada instrucciÃ³n "nop" tarda 1 ciclo mÃ¡quina.
                      00031 ;
01C7                  00032 Retardo_10micros                                ; La llamada "call" aporta 2 ciclos mÃ¡quina.
01C7   0000           00033         nop                             ; Aporta 1 ciclo mÃ¡quina.
01C8   0000           00034         nop                             ; Aporta 1 ciclo mÃ¡quina.
01C9   0000           00035         nop                             ; Aporta 1 ciclo mÃ¡quina.
01CA   0000           00036         nop                             ; Aporta 1 ciclo mÃ¡quina.
01CB   0000           00037         nop                             ; Aporta 1 ciclo mÃ¡quina.
01CC   0000           00038         nop                             ; Aporta 1 ciclo mÃ¡quina.      
01CD                  00039 Retardo_5micros                         ; La llamada "call" aporta 2 ciclos mÃ¡quina.
01CD   0000           00040         nop                             ; Aporta 1 ciclo mÃ¡quina.
01CE                  00041 Retardo_4micros                         ; La llamada "call" aporta 2 ciclos mÃ¡quina.
01CE   0008           00042         return                          ; El salto del retorno aporta 2 ciclos mÃ¡quina.
                      00043 ;
                      00044 ; RETARDOS de 20 hasta 500 microsegundos ------------------------------------------------
                      00045 ;
01CF                  00046 Retardo_500micros                               ; La llamada "call" aporta 2 ciclos mÃ¡quina.
01CF   0000           00047         nop                             ; Aporta 1 ciclo mÃ¡quina.
01D0   30A4           00048         movlw   d'164'                  ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "K".
01D1   29DB           00049         goto    RetardoMicros           ; Aporta 2 ciclos mÃ¡quina.
01D2                  00050 Retardo_200micros                               ; La llamada "call" aporta 2 ciclos mÃ¡quina.
01D2   0000           00051         nop                             ; Aporta 1 ciclo mÃ¡quina.
01D3   3040           00052         movlw   d'64'                   ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "K".
01D4   29DB           00053         goto    RetardoMicros           ; Aporta 2 ciclos mÃ¡quina.
01D5                  00054 Retardo_100micros                               ; La llamada "call" aporta 2 ciclos mÃ¡quina.
01D5   301F           00055         movlw   d'31'                   ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "K".
01D6   29DB           00056         goto    RetardoMicros           ; Aporta 2 ciclos mÃ¡quina.
01D7                  00057 Retardo_50micros                                ; La llamada "call" aporta 2 ciclos mÃ¡quina.
01D7   0000           00058         nop                             ; Aporta 1 ciclo mÃ¡quina.
01D8   300E           00059         movlw   d'14'                   ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "K".
01D9   29DB           00060         goto    RetardoMicros           ; Aporta 2 ciclos mÃ¡quina.
01DA                  00061 Retardo_20micros                                ; La llamada "call" aporta 2 ciclos mÃ¡quina.
01DA   3005           00062         movlw   d'5'                    ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "K".
                      00063 ;
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00064 ; El prÃ³ximo bloque "RetardoMicros" tarda:
                      00065 ; 1 + (K-1) + 2 + (K-1)x2 + 2 = (2 + 3K) ciclos mÃ¡quina.
                      00066 ;
01DB                  00067 RetardoMicros
01DB   00D5           00068         movwf   R_ContA                 ; Aporta 1 ciclo mÃ¡quina.
01DC                  00069 Rmicros_Bucle
01DC   0BD5           00070         decfsz  R_ContA,F               ; (K-1)x1 cm (cuando no salta) + 2 cm (al saltar).
01DD   29DC           00071         goto    Rmicros_Bucle           ; Aporta (K-1)x2 ciclos mÃ¡quina.
01DE   0008           00072         return                          ; El salto del retorno aporta 2 ciclos mÃ¡quina.
                      00073 ;
                      00074 ;En total estas subrutinas tardan:
                      00075 ; - Retardo_500micros:  2 + 1 + 1 + 2 + (2 + 3K) = 500 cm = 500 Âµs. (para K=164 y 4 MHz).
                      00076 ; - Retardo_200micros:  2 + 1 + 1 + 2 + (2 + 3K) = 200 cm = 200 Âµs. (para K= 64 y 4 MHz).
                      00077 ; - Retardo_100micros:  2     + 1 + 2 + (2 + 3K) = 100 cm = 100 Âµs. (para K= 31 y 4 MHz).
                      00078 ; - Retardo_50micros :  2 + 1 + 1 + 2 + (2 + 3K) =  50 cm =  50 Âµs. (para K= 14 y 4 MHz).
                      00079 ; - Retardo_20micros :  2     + 1     + (2 + 3K) =  20 cm =  20 Âµs. (para K=  5 y 4 MHz).
                      00080 ;
                      00081 ; RETARDOS de 1 ms hasta 200 ms. --------------------------------------------------------
                      00082 ;
01DF                  00083 Retardo_200ms                           ; La llamada "call" aporta 2 ciclos mÃ¡quina.
01DF   30C8           00084         movlw   d'200'                  ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "M".
01E0   29EE           00085         goto    Retardos_ms             ; Aporta 2 ciclos mÃ¡quina.
01E1                  00086 Retardo_100ms                           ; La llamada "call" aporta 2 ciclos mÃ¡quina.
01E1   3064           00087         movlw   d'100'                  ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "M".
01E2   29EE           00088         goto    Retardos_ms             ; Aporta 2 ciclos mÃ¡quina.
01E3                  00089 Retardo_50ms                            ; La llamada "call" aporta 2 ciclos mÃ¡quina.
01E3   3032           00090         movlw   d'50'                   ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "M".
01E4   29EE           00091         goto    Retardos_ms             ; Aporta 2 ciclos mÃ¡quina.
01E5                  00092 Retardo_20ms                            ; La llamada "call" aporta 2 ciclos mÃ¡quina.
01E5   3014           00093         movlw   d'20'                   ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "M".
01E6   29EE           00094         goto    Retardos_ms             ; Aporta 2 ciclos mÃ¡quina.
01E7                  00095 Retardo_10ms                            ; La llamada "call" aporta 2 ciclos mÃ¡quina.
01E7   300A           00096         movlw   d'10'                   ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "M".
01E8   29EE           00097         goto    Retardos_ms             ; Aporta 2 ciclos mÃ¡quina.
01E9                  00098 Retardo_5ms                             ; La llamada "call" aporta 2 ciclos mÃ¡quina.
01E9   3005           00099         movlw   d'5'                    ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "M".
01EA   29EE           00100         goto    Retardos_ms             ; Aporta 2 ciclos mÃ¡quina.
01EB                  00101 Retardo_2ms                             ; La llamada "call" aporta 2 ciclos mÃ¡quina.
01EB   3002           00102         movlw   d'2'                    ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "M".
01EC   29EE           00103         goto    Retardos_ms             ; Aporta 2 ciclos mÃ¡quina.
01ED                  00104 Retardo_1ms                             ; La llamada "call" aporta 2 ciclos mÃ¡quina.
01ED   3001           00105         movlw   d'1'                    ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "M".
                      00106 ;
                      00107 ; El prÃ³ximo bloque "Retardos_ms" tarda:
                      00108 ; 1 + M + M + KxM + (K-1)xM + Mx2 + (K-1)Mx2 + (M-1) + 2 + (M-1)x2 + 2 =
                      00109 ; = (2 + 4M + 4KM) ciclos mÃ¡quina. Para K=249 y M=1 supone 1002 ciclos mÃ¡quina
                      00110 ; que a 4 MHz son 1002 Âµs = 1 ms.
                      00111 ;
01EE                  00112 Retardos_ms
01EE   00D6           00113         movwf   R_ContB                 ; Aporta 1 ciclo mÃ¡quina.
01EF                  00114 R1ms_BucleExterno
01EF   30F9           00115         movlw   d'249'                  ; Aporta Mx1 ciclos mÃ¡quina. Este es el valor de "K".
01F0   00D5           00116         movwf   R_ContA                 ; Aporta Mx1 ciclos mÃ¡quina.
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01F1                  00117 R1ms_BucleInterno
01F1   0000           00118         nop                             ; Aporta KxMx1 ciclos mÃ¡quina.
01F2   0BD5           00119         decfsz  R_ContA,F               ; (K-1)xMx1 cm (cuando no salta) + Mx2 cm (al saltar).
01F3   29F1           00120         goto    R1ms_BucleInterno               ; Aporta (K-1)xMx2 ciclos mÃ¡quina.
01F4   0BD6           00121         decfsz  R_ContB,F               ; (M-1)x1 cm (cuando no salta) + 2 cm (al saltar).
01F5   29EF           00122         goto    R1ms_BucleExterno       ; Aporta (M-1)x2 ciclos mÃ¡quina.
01F6   0008           00123         return                          ; El salto del retorno aporta 2 ciclos mÃ¡quina.
                      00124 ;
                      00125 ;En total estas subrutinas tardan:
                      00126 ; - Retardo_200ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 200007 cm = 200 ms. (M=200 y K=249).
                      00127 ; - Retardo_100ms:      2 + 1 + 2 + (2 + 4M + 4KM) = 100007 cm = 100 ms. (M=100 y K=249).
                      00128 ; - Retardo_50ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  50007 cm =  50 ms. (M= 50 y K=249).
                      00129 ; - Retardo_20ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  20007 cm =  20 ms. (M= 20 y K=249).
                      00130 ; - Retardo_10ms :      2 + 1 + 2 + (2 + 4M + 4KM) =  10007 cm =  10 ms. (M= 10 y K=249).
                      00131 ; - Retardo_5ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   5007 cm =   5 ms. (M=  5 y K=249).
                      00132 ; - Retardo_2ms  :      2 + 1 + 2 + (2 + 4M + 4KM) =   2007 cm =   2 ms. (M=  2 y K=249).
                      00133 ; - Retardo_1ms  :      2 + 1     + (2 + 4M + 4KM) =   1005 cm =   1 ms. (M=  1 y K=249).
                      00134 ;
                      00135 ; RETARDOS de 0.5 hasta 20 segundos ---------------------------------------------------
                      00136 ;
01F7                  00137 Retardo_20s                             ; La llamada "call" aporta 2 ciclos mÃ¡quina.
01F7   30C8           00138         movlw   d'200'                  ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "N".
01F8   2A02           00139         goto    Retardo_1Decima         ; Aporta 2 ciclos mÃ¡quina.
01F9                  00140 Retardo_10s                             ; La llamada "call" aporta 2 ciclos mÃ¡quina.
01F9   3064           00141         movlw   d'100'                  ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "N".
01FA   2A02           00142         goto    Retardo_1Decima         ; Aporta 2 ciclos mÃ¡quina.
01FB                  00143 Retardo_5s                              ; La llamada "call" aporta 2 ciclos mÃ¡quina.
01FB   3032           00144         movlw   d'50'                   ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "N".
01FC   2A02           00145         goto    Retardo_1Decima         ; Aporta 2 ciclos mÃ¡quina.
01FD                  00146 Retardo_2s                              ; La llamada "call" aporta 2 ciclos mÃ¡quina.
01FD   3014           00147         movlw   d'20'                   ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "N".
01FE   2A02           00148         goto    Retardo_1Decima         ; Aporta 2 ciclos mÃ¡quina.
01FF                  00149 Retardo_1s                              ; La llamada "call" aporta 2 ciclos mÃ¡quina.
01FF   300A           00150         movlw   d'10'                   ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "N".
0200   2A02           00151         goto    Retardo_1Decima         ; Aporta 2 ciclos mÃ¡quina.
0201                  00152 Retardo_500ms                           ; La llamada "call" aporta 2 ciclos mÃ¡quina.
0201   3005           00153         movlw   d'5'                    ; Aporta 1 ciclo mÃ¡quina. Este es el valor de "N".
                      00154 ;
                      00155 ; El prÃ³ximo bloque "Retardo_1Decima" tarda:
                      00156 ; 1 + N + N + MxN + MxN + KxMxN + (K-1)xMxN + MxNx2 + (K-1)xMxNx2 +
                      00157 ;   + (M-1)xN + Nx2 + (M-1)xNx2 + (N-1) + 2 + (N-1)x2 + 2 =
                      00158 ; = (2 + 4M + 4MN + 4KM) ciclos mÃ¡quina. Para K=249, M=100 y N=1 supone 100011
                      00159 ; ciclos mÃ¡quina que a 4 MHz son 100011 Âµs = 100 ms = 0,1 s = 1 dÃ©cima de segundo.
                      00160 ;
0202                  00161 Retardo_1Decima
0202   00D7           00162         movwf   R_ContC                 ; Aporta 1 ciclo mÃ¡quina.
0203                  00163 R1Decima_BucleExterno2
0203   3064           00164         movlw   d'100'                  ; Aporta Nx1 ciclos mÃ¡quina. Este es el valor de "M".
0204   00D6           00165         movwf   R_ContB                 ; Aporta Nx1 ciclos mÃ¡quina.
0205                  00166 R1Decima_BucleExterno
0205   30F9           00167         movlw   d'249'                  ; Aporta MxNx1 ciclos mÃ¡quina. Este es el valor de "K".
0206   00D5           00168         movwf   R_ContA                 ; Aporta MxNx1 ciclos mÃ¡quina.
0207                  00169 R1Decima_BucleInterno          
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0207   0000           00170         nop                             ; Aporta KxMxNx1 ciclos mÃ¡quina.
0208   0BD5           00171         decfsz  R_ContA,F               ; (K-1)xMxNx1 cm (si no salta) + MxNx2 cm (al saltar).
0209   2A07           00172         goto    R1Decima_BucleInterno   ; Aporta (K-1)xMxNx2 ciclos mÃ¡quina.
020A   0BD6           00173         decfsz  R_ContB,F               ; (M-1)xNx1 cm (cuando no salta) + Nx2 cm (al saltar).
020B   2A05           00174         goto    R1Decima_BucleExterno   ; Aporta (M-1)xNx2 ciclos mÃ¡quina.
020C   0BD7           00175         decfsz  R_ContC,F               ; (N-1)x1 cm (cuando no salta) + 2 cm (al saltar).
020D   2A03           00176         goto    R1Decima_BucleExterno2  ; Aporta (N-1)x2 ciclos mÃ¡quina.
020E   0008           00177         return                          ; El salto del retorno aporta 2 ciclos mÃ¡quina.
                      00178 ;
                      00179 ;En total estas subrutinas tardan:
                      00180 ; - Retardo_20s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 20000807 cm = 20 s.
                      00181 ;                       (N=200, M=100 y K=249).
                      00182 ; - Retardo_10s:        2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) = 10000407 cm = 10 s.
                      00183 ;                       (N=100, M=100 y K=249).
                      00184 ; - Retardo_5s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  5000207 cm =  5 s.
                      00185 ;                       (N= 50, M=100 y K=249).
                      00186 ; - Retardo_2s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  2000087 cm =  2 s.
                      00187 ;                       (N= 20, M=100 y K=249).
                      00188 ; - Retardo_1s:         2 + 1 + 2 + (2 + 4N + 4MN + 4KMN) =  1000047 cm =  1 s.
                      00189 ;                       (N= 10, M=100 y K=249).
                      00190 ; - Retardo_500ms:      2 + 1     + (2 + 4N + 4MN + 4KMN) =   500025 cm = 0,5 s.
                      00191 ;                       (N=  5, M=100 y K=249).
                      00192 
                      00193 ;       ===================================================================
                      00194 ;         Del libro "MICROCONTROLADOR PIC16F84. DESARROLLO DE PROYECTOS"
                      00195 ;         E. Palacios, F. Remiro y L. LÃ³pez.
                      00196 ;         Editorial Ra-Ma.  www.ra-ma.es
                      00197 ;       =====================================================
                      00284 ;-----------------------------------;Librerias
Warning[205]: Found directive in column 1. (END)
                      00285 END
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
AJUSTE                            0000007A
AJUSTE_HUM                        0000007D
Arit_Cociente_H                   0000003E
Arit_Cociente_L                   0000003F
Arit_ContadorBits                 0000003B
Arit_DivideBit16                  000000F3
Arit_Divide_16Bit                 000000EE
Arit_Dividendo_H                  0000003C
Arit_Dividendo_L                  0000003D
Arit_Divisor                      00000041
Arit_Multiplica16Bit              000000DD
Arit_MultiplicaBit8               000000CF
Arit_Multiplica_16Bit             000000D7
Arit_Multiplica_8Bit              000000CA
Arit_Multiplicador                00000034
Arit_Multiplicador_BitCero        000000E7
Arit_Multiplicador_H              00000036
Arit_Multiplicador_L              00000038
Arit_Multiplicando                00000033
Arit_Multiplicando_H              00000035
Arit_Multiplicando_L              00000037
Arit_Negar                        000000BA
Arit_Operando_1H                  00000042
Arit_Operando_1L                  00000043
Arit_Operando_2H                  00000044
Arit_Operando_2L                  00000045
Arit_Producto_1H                  00000046
Arit_Producto_1L                  00000047
Arit_Producto_2H                  00000048
Arit_Producto_2L                  00000049
Arit_Producto_H                   0000003A
Arit_Producto_L                   00000039
Arit_Resta_16Bit                  000000C2
Arit_Resto                        00000040
Arit_Suma_16Bit                   000000C3
Auxiliar                          0000002B
BCD_Centenas                      0000004A
BCD_Decenas                       0000004B
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

BCD_IncrementaCentenas            0000010D
BCD_IncrementaDecenas             00000107
BCD_Resta10                       00000103
BCD_Unidades                      0000004C
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BIN_BCD_Fin                       00000110
BIN_a_BCD                         00000100
BRGH                              00000002
C                                 00000000
C1INV                             00000004
C1OUT                             00000006
C2INV                             00000005
C2OUT                             00000007
CALCULO_HUM                       00000069
CALCULO_TEMP                      0000005A
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CIS                               00000003
CKE                               00000006
CKP                               00000004
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             0000009C
CMIE                              00000006
CMIF                              00000006
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

CONVERSION                        00000023
CONVERSION_ADC                    0000008B
CREN                              00000004
CSRC                              00000007
CVR0                              00000000
CVR1                              00000001
CVR2                              00000002
CVR3                              00000003
CVRCON                            0000009D
CVREN                             00000007
CVROE                             00000006
CVRR                              00000005
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
D_A                               00000005
D_NOT_A                           00000005
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
FinInterrupcion                   00000021
GCEN                              00000007
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
GO_NOT_DONE                       00000002
GUARDAR_HUM                       00000031
GUARDAR_TEMP                      00000026
HUMFH                             00000029
HUMFL                             0000002A
HUMH                              00000023
HUML                              00000024
Hora                              0000002E
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
IBF                               00000007
IBOV                              00000005
INDF                              00000000
INICIO                            00000005
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

INTF                              00000001
INTTM0                            0000001D
IRP                               00000007
LCD_2Lineas4Bits5x7               00000181
LCD_ApuntaCaracter                0000004D
LCD_Auxiliar1                     00000053
LCD_Auxiliar2                     00000054
LCD_Borra                         0000017F
LCD_BusDatos                      PORTD
LCD_Byte                          000001B1
LCD_ByteCompleto                  000001B8
LCD_Caracter                      00000184
LCD_CaracteresPorLinea            00000010
LCD_CodigoCGROM                   0000018E
LCD_CursorIncr                    0000016B
LCD_CursorOFF                     0000017D
LCD_CursorON                      0000017B
LCD_CursorPosicion                0000004F
LCD_Dato                          00000050
LCD_DosEspaciosBlancos            000001A8
LCD_EnheMayuscula                 00000195
LCD_EnheMinuscula                 0000018F
LCD_Envia                         00000186
LCD_EnviaBlancos                  000001AB
LCD_EnviaByteLetra                000001C4
LCD_EnviaComando                  00000182
LCD_EnviaOtroBlanco               000001AC
LCD_EsFinalLinea                  0000012B
LCD_EscribeLCD                    00000155
LCD_FinCGROM                      000001A2
LCD_FinMensaje                    00000120
LCD_FinMovimiento                 0000013A
LCD_FinVisualizaDigito            000001C6
LCD_Grado                         0000019C
LCD_GuardaDato                    00000051
LCD_GuardaTRISD                   00000052
LCD_Inicializa                    0000013B
LCD_Linea1                        0000016D
LCD_Linea2                        0000016F
LCD_LineaEnBlanco                 000001A4
LCD_Mensaje                       00000113
LCD_MensajeMovimiento             00000121
LCD_Nibble                        000001BC
LCD_NoEsFinalLinea                00000130
LCD_NoUltimoCaracter              0000011D
LCD_NoUltimoCaracter2             00000136
LCD_OFF                           00000179
LCD_PinEnable                     PORTE,2
LCD_PinRS                         PORTE,0
LCD_PinRW                         PORTE,1
LCD_PosicionLinea1                00000175
LCD_PosicionLinea2                00000177
LCD_PrimeraPosicion               00000125
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 29


SYMBOL TABLE
  LABEL                             VALUE 

LCD_TresEspaciosBlancos           000001AA
LCD_UnEspacioBlanco               000001A6
LCD_ValorCaracter                 0000004E
LCD_VisualizaAlto                 000001B9
LCD_VisualizaBajo                 000001BB
LCD_VisualizaCaracter             00000127
LCD_VisualizaOtroCaracter         00000117
LIMPIA_REG                        000000B1
M0                                00000090
M1                                0000009E
M2                                000000A8
M3                                000000AA
MedioSegundo                      00000031
Mensajes                          0000008F
Minuto                            0000002F
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OBF                               00000006
OERR                              00000001
OPTION_REG                        00000081
P                                 00000004
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PRINCIPAL                         0000001C
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 30


SYMBOL TABLE
  LABEL                             VALUE 

PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSPIE                             00000007
PSPIF                             00000007
PSPMODE                           00000004
R                                 00000002
R1Decima_BucleExterno             00000205
R1Decima_BucleExterno2            00000203
R1Decima_BucleInterno             00000207
R1ms_BucleExterno                 000001EF
R1ms_BucleInterno                 000001F1
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 31


SYMBOL TABLE
  LABEL                             VALUE 

RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ_WRITE                        00000002
RESH                              0000002C
RESL                              0000002D
RESULTADO                         00000086
RETARDO_CARGA                     000000AC
RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_ContA                           00000055
R_ContB                           00000056
R_ContC                           00000057
R_NOT_W                           00000002
R_W                               00000002
Registro50ms                      00000032
Retardo                           000000AE
RetardoMicros                     000001DB
Retardo_100micros                 000001D5
Retardo_100ms                     000001E1
Retardo_10micros                  000001C7
Retardo_10ms                      000001E7
Retardo_10s                       000001F9
Retardo_1Decima                   00000202
Retardo_1ms                       000001ED
Retardo_1s                        000001FF
Retardo_200micros                 000001D2
Retardo_200ms                     000001DF
Retardo_20micros                  000001DA
Retardo_20ms                      000001E5
Retardo_20s                       000001F7
Retardo_2ms                       000001EB
Retardo_2s                        000001FD
Retardo_4micros                   000001CE
Retardo_500micros                 000001CF
Retardo_500ms                     00000201
Retardo_50micros                  000001D7
Retardo_50ms                      000001E3
Retardo_5micros                   000001CD
Retardo_5ms                       000001E9
Retardo_5s                        000001FB
Retardoini                        00000020
Retardos_ms                       000001EE
Rmicros_Bucle                     000001DC
S                                 00000003
SEN                               00000000
SMP                               00000007
SPBRG                             00000099
SPEN                              00000007
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
SYNC                              00000004
Segundo                           00000030
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TEMPF2H                           00000026
TEMPF2L                           00000025
TEMPFH                            00000028
TEMPFL                            00000027
TEMPH                             00000022
TEMPL                             00000021
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR0_Carga50ms                    FFFFFF3D
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
VISUALIZAR_DATOS                  0000003B
W                                 00000000
WCOL                              00000007
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_BODEN_OFF                        00003FBF
_BODEN_ON                         00003FFF
_CONFIG                           00002007
_CPD_OFF                          00003FFF
_CPD_ON                           00003EFF
_CP_ALL                           00001FFF
_CP_OFF                           00003FFF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         000037FF
_DEVID1                           00002006
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_LVP_OFF                          00003F7F
_LVP_ON                           00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FFD
__16F877A                         00000001


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : X---XXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXX- ---------------- ---------------- ----------------
MPASM  5.39          INVERNADERO_V3_TIMER.ASM   6-18-2024  17:39:32         PAGE 35


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   524
Program Memory Words Free:  7668


Errors   :     1
Warnings :    17 reported,     0 suppressed
Messages :     9 reported,     0 suppressed

